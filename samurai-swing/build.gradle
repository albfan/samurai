plugins {
    id 'java'
    id 'signing'
    id 'maven-publish'
}

group 'one.cafebabe'
version '2021.6'

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

compileJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
    options.compilerArgs += ['--add-exports=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED',
                             '--add-exports=jdk.attach/sun.tools.attach=ALL-UNNAMED']
}

test{
    systemProperty "java.awt.headless", "true"
}

compileTestJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
    options.compilerArgs += ['--add-exports=jdk.internal.jvmstat/sun.jvmstat.monitor=ALL-UNNAMED',
                             '--add-exports=jdk.attach/sun.tools.attach=ALL-UNNAMED']
}

dependencies {
    implementation project(':samurai-core')
    implementation project(':samurai-remotedump')
    implementation project(':samurai-web')
    implementation 'com.intellij:annotations:12.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'samurai'
            from components.java
            pom {
                name = 'samurai'
                description = 'samurai'
                url = 'https://github.com/yusuke/samurai'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'yusuke'
                        name = 'Yusuke Yamamoto'
                        email = 'yusuke@mac.com'
                    }
                }
                scm {
                    url = 'https://github.com/yusuke/samurai'
                    connection = 'scm:git:git://github.com/yusuke/samurai.git'
                    developerConnection = 'scm:git:git@github.com:yusuke/samurai.git'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.properties['SONATYPE_USERNAME'] ?: "none"
                password = project.properties['SONATYPE_PASSWORD'] ?: "none"
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


jar {
    zip64 = true
    duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    manifest {
        attributes "Main-Class": project.properties['mainClassName']
    }

    from(configurations.runtimeClasspath.collect { entry -> zipTree(entry) }) {
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
    }
}

tasks.jar.dependsOn([':samurai-web:jar'])


