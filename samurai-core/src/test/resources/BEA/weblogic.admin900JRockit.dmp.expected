ftd.0.deadLockSize=0
ftd.0.threadCount=25
#Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
#   -- Waiting for notification on: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.t3.srvr.T3Srvr.waitForDeath(T3Srvr.java:727)
#   ^-- Lock released while waiting: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:379)
#   weblogic.Server.main(Server.java:66)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.0.blockedObjectId=null
td.0.0.blockerId=null
td.0.0.condition=alive, in native, waiting, priority=5
td.0.0.header=Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
td.0.0.id=1
td.0.0.name=Main Thread
td.0.0.isBlocked=false
td.0.0.isBlocking=false
td.0.0.isDaemon=false
td.0.0.isDeadLocked=false
td.0.0.isIdle=true

#Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.0.1.blockedObjectId=null
td.0.1.blockerId=null
td.0.1.condition=alive, in native, priority=5, DAEMON
td.0.1.header=Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.0.1.id=2
td.0.1.name=(Signal Handler)
td.0.1.isBlocked=false
td.0.1.isBlocking=false
td.0.1.isDaemon=true
td.0.1.isDeadLocked=false
td.0.1.isIdle=false

#Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.0.2.blockedObjectId=null
td.0.2.blockerId=null
td.0.2.condition=alive, in native, native_waiting, priority=5, DAEMON
td.0.2.header=Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.0.2.id=3
td.0.2.name=(Code Generation Thread 1)
td.0.2.isBlocked=false
td.0.2.isBlocking=false
td.0.2.isDaemon=true
td.0.2.isDeadLocked=false
td.0.2.isIdle=false

#Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.0.3.blockedObjectId=null
td.0.3.blockerId=null
td.0.3.condition=alive, in native, native_waiting, priority=1, DAEMON
td.0.3.header=Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.0.3.id=4
td.0.3.name=(Code Optimization Thread 1)
td.0.3.isBlocked=false
td.0.3.isBlocking=false
td.0.3.isDaemon=true
td.0.3.isDeadLocked=false
td.0.3.isIdle=false

#Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.0.4.blockedObjectId=null
td.0.4.blockerId=null
td.0.4.condition=alive, in native, priority=5, DAEMON
td.0.4.header=Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.0.4.id=5
td.0.4.name=(GC Main Thread)
td.0.4.isBlocked=false
td.0.4.isBlocking=false
td.0.4.isDaemon=true
td.0.4.isDeadLocked=false
td.0.4.isIdle=false

#Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.0.5.blockedObjectId=null
td.0.5.blockerId=null
td.0.5.condition=alive, in native, native_waiting, priority=5, DAEMON
td.0.5.header=Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.0.5.id=6
td.0.5.name=(GC Worker Thread 1)
td.0.5.isBlocked=false
td.0.5.isBlocking=false
td.0.5.isDaemon=true
td.0.5.isDeadLocked=false
td.0.5.isIdle=false

#Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.0.6.blockedObjectId=null
td.0.6.blockerId=null
td.0.6.condition=alive, in native, priority=10, DAEMON
td.0.6.header=Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.0.6.id=7
td.0.6.name=(Hotspot Detector)
td.0.6.isBlocked=false
td.0.6.isBlocking=false
td.0.6.isDaemon=true
td.0.6.isDeadLocked=false
td.0.6.isIdle=false

#Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
#   jrockit.memory.Finalizer.getPendingFinalizee(Native Method)
#   jrockit.memory.Finalizer.access$100(Unknown Source)
#   jrockit.memory.Finalizer$4.run(Unknown Source)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.7.blockedObjectId=null
td.0.7.blockerId=null
td.0.7.condition=alive, in native, native_waiting, priority=8, DAEMON
td.0.7.header=Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
td.0.7.id=8
td.0.7.name=Finalizer
td.0.7.isBlocked=false
td.0.7.isBlocking=false
td.0.7.isDaemon=true
td.0.7.isDeadLocked=false
td.0.7.isIdle=false

#Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
#   java.lang.ref.Reference.getPending(Native Method)
#   java.lang.ref.Reference.access$000(Unknown Source)
#   java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.8.blockedObjectId=null
td.0.8.blockerId=null
td.0.8.condition=alive, in native, native_waiting, priority=10, DAEMON
td.0.8.header=Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
td.0.8.id=9
td.0.8.name=Reference Handler
td.0.8.isBlocked=false
td.0.8.isBlocking=false
td.0.8.isDaemon=true
td.0.8.isDeadLocked=false
td.0.8.isIdle=false

#Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@1bc88a[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:483)
#   ^-- Lock released while waiting: java.util.TaskQueue@1bc88a[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.9.blockedObjectId=null
td.0.9.blockerId=null
td.0.9.condition=alive, in native, waiting, priority=5, DAEMON
td.0.9.header=Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
td.0.9.id=12
td.0.9.name=Timer-0
td.0.9.isBlocked=false
td.0.9.isBlocking=false
td.0.9.isDaemon=true
td.0.9.isDeadLocked=false
td.0.9.isIdle=true

#Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@87830d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:509)
#   ^-- Lock released while waiting: java.util.TaskQueue@87830d[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.10.blockedObjectId=null
td.0.10.blockerId=null
td.0.10.condition=alive, in native, waiting, priority=5, DAEMON
td.0.10.header=Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
td.0.10.id=13
td.0.10.name=Timer-1
td.0.10.isBlocked=false
td.0.10.isBlocking=false
td.0.10.isDaemon=true
td.0.10.isDeadLocked=false
td.0.10.isIdle=true

#Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
#   jrockit.vm.Threads.getThreadSnapShot0(Native Method)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.mapi.ThreadSnapshotImpl.getThreadSnapshot(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadSnapshots(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadStackDump(Unknown Source)
#   weblogic.platform.JRockitVM.threadDump(JRockitVM.java:35)
#   weblogic.common.internal.AdminProxy.execute(AdminProxy.java:203)
#   weblogic.t3.srvr.ClientRequest$1.run(ClientContext.java:711)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:363)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:147)
#   weblogic.t3.srvr.ClientRequest.run(ClientContext.java:708)
#   weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.11.blockedObjectId=null
td.0.11.blockerId=null
td.0.11.condition=alive, in native, priority=5, DAEMON
td.0.11.header=Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
td.0.11.id=14
td.0.11.name=[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'
td.0.11.isBlocked=false
td.0.11.isBlocking=false
td.0.11.isDaemon=true
td.0.11.isDeadLocked=false
td.0.11.isIdle=false

#Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.time.common.internal.TimeTable.snooze(TimeTable.java:286)
#   ^-- Lock released while waiting: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   weblogic.time.common.internal.TimeEventGenerator.run(TimeEventGenerator.java:117)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.12.blockedObjectId=null
td.0.12.blockerId=null
td.0.12.condition=alive, in native, waiting, priority=9, DAEMON
td.0.12.header=Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
td.0.12.id=15
td.0.12.name=weblogic.time.TimeEventGenerator
td.0.12.isBlocked=false
td.0.12.isBlocking=false
td.0.12.isDaemon=true
td.0.12.isDeadLocked=false
td.0.12.isIdle=true

#Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.timers.internal.TimerThread$Thread.run(TimerThread.java:255)
#   ^-- Lock released while waiting: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.0.13.blockedObjectId=null
td.0.13.blockerId=null
td.0.13.condition=alive, in native, waiting, priority=9, DAEMON
td.0.13.header=Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
td.0.13.id=16
td.0.13.name=weblogic.timers.TimerThread
td.0.13.isBlocked=false
td.0.13.isBlocking=false
td.0.13.isDaemon=true
td.0.13.isDeadLocked=false
td.0.13.isIdle=true

#Thread-17 "[STANDBY] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@d5d3647[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@d5d3647[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.14.blockedObjectId=null
td.0.14.blockerId=null
td.0.14.condition=alive, in native, waiting, priority=5, DAEMON
td.0.14.header=Thread-17 "[STANDBY] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.0.14.id=17
td.0.14.name=[STANDBY] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'
td.0.14.isBlocked=false
td.0.14.isBlocking=false
td.0.14.isDaemon=true
td.0.14.isDeadLocked=false
td.0.14.isIdle=true

#Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
#   jrockit.mapi.GarbageCollectorImpl.waitForEvent(Native Method)
#   jrockit.mapi.GarbageCollectorImpl.access$100(Unknown Source)
#   jrockit.mapi.GarbageCollectorImpl$GCEventThread.getNextEvent(Unknown Source)
#   jrockit.mapi.AsyncEventProvider$EventThread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.15.blockedObjectId=null
td.0.15.blockerId=null
td.0.15.condition=alive, in native, native_waiting, priority=5, DAEMON
td.0.15.header=Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
td.0.15.id=18
td.0.15.name=GC event thread
td.0.15.isBlocked=false
td.0.15.isBlocking=false
td.0.15.isDaemon=true
td.0.15.isDeadLocked=false
td.0.15.isIdle=false

#Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.16.blockedObjectId=null
td.0.16.blockerId=null
td.0.16.condition=alive, in native, priority=5, DAEMON
td.0.16.header=Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.0.16.id=19
td.0.16.name=ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'
td.0.16.isBlocked=false
td.0.16.isBlocking=false
td.0.16.isDaemon=true
td.0.16.isDeadLocked=false
td.0.16.isIdle=false

#Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.17.blockedObjectId=null
td.0.17.blockerId=null
td.0.17.condition=alive, in native, priority=5, DAEMON
td.0.17.header=Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.0.17.id=20
td.0.17.name=ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'
td.0.17.isBlocked=false
td.0.17.isBlocking=false
td.0.17.isDaemon=true
td.0.17.isDeadLocked=false
td.0.17.isIdle=false

#Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
#   -- Waiting for notification on: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   com.octetstring.vde.backend.standard.TransactionProcessor.waitChange(TransactionProcessor.java:367)
#   ^-- Lock released while waiting: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   com.octetstring.vde.backend.standard.TransactionProcessor.run(TransactionProcessor.java:212)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.18.blockedObjectId=null
td.0.18.blockerId=null
td.0.18.condition=alive, in native, waiting, priority=2, DAEMON
td.0.18.header=Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
td.0.18.id=23
td.0.18.name=VDE Transaction Processor Thread
td.0.18.isBlocked=false
td.0.18.isBlocking=false
td.0.18.isDaemon=true
td.0.18.isDeadLocked=false
td.0.18.isIdle=true

#Thread-25 "[STANDBY] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@ffffffff9a97e7c8[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@ffffffff9a97e7c8[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.19.blockedObjectId=null
td.0.19.blockerId=null
td.0.19.condition=alive, in native, waiting, priority=5, DAEMON
td.0.19.header=Thread-25 "[STANDBY] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.0.19.id=25
td.0.19.name=[STANDBY] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'
td.0.19.isBlocked=false
td.0.19.isBlocking=false
td.0.19.isDaemon=true
td.0.19.isDeadLocked=false
td.0.19.isIdle=true

#Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@d57544[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.Thread.whPark(Unknown Source)
#   ^-- Lock released while waiting: java.lang.Object@d57544[fat lock]
#   java.util.concurrent.locks.LockSupport.park(Unknown Source)
#   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1772)
#   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
#   weblogic.utils.concurrent.JDK15ConcurrentBlockingQueue.take(JDK15ConcurrentBlockingQueue.java:89)
#   weblogic.store.internal.PersistentStoreImpl.getOutstandingWork(PersistentStoreImpl.java:520)
#   weblogic.store.internal.PersistentStoreImpl.run(PersistentStoreImpl.java:556)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.20.blockedObjectId=null
td.0.20.blockerId=null
td.0.20.condition=alive, in native, parked, priority=10, DAEMON
td.0.20.header=Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
td.0.20.id=26
td.0.20.name=weblogic.store._WLS_AdminServer
td.0.20.isBlocked=false
td.0.20.isBlocking=false
td.0.20.isDaemon=true
td.0.20.isDeadLocked=false
td.0.20.isIdle=false

#Thread-27 "[STANDBY] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@27d29949[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@27d29949[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.21.blockedObjectId=null
td.0.21.blockerId=null
td.0.21.condition=alive, in native, waiting, priority=5, DAEMON
td.0.21.header=Thread-27 "[STANDBY] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.0.21.id=27
td.0.21.name=[STANDBY] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'
td.0.21.isBlocked=false
td.0.21.isBlocking=false
td.0.21.isDaemon=true
td.0.21.isDeadLocked=false
td.0.21.isIdle=true

#Thread-28 "[STANDBY] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@ffffffffb50d4aca[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@ffffffffb50d4aca[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.22.blockedObjectId=null
td.0.22.blockerId=null
td.0.22.condition=alive, in native, waiting, priority=5, DAEMON
td.0.22.header=Thread-28 "[STANDBY] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.0.22.id=28
td.0.22.name=[STANDBY] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'
td.0.22.isBlocked=false
td.0.22.isBlocking=false
td.0.22.isDaemon=true
td.0.22.isDeadLocked=false
td.0.22.isIdle=true

#Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a546bf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.23.blockedObjectId=null
td.0.23.blockerId=null
td.0.23.condition=alive, in native, priority=9, DAEMON
td.0.23.header=Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
td.0.23.id=30
td.0.23.name=DynamicListenThread[Default[1]]
td.0.23.isBlocked=false
td.0.23.isBlocking=false
td.0.23.isDaemon=true
td.0.23.isDeadLocked=false
td.0.23.isIdle=false

#Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a33bcf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.0.24.blockedObjectId=null
td.0.24.blockerId=null
td.0.24.condition=alive, in native, priority=9, DAEMON
td.0.24.header=Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
td.0.24.id=31
td.0.24.name=DynamicListenThread[Default]
td.0.24.isBlocked=false
td.0.24.isBlocking=false
td.0.24.isDaemon=true
td.0.24.isDeadLocked=false
td.0.24.isIdle=false

ftd.1.deadLockSize=1
ftd.1.threadCount=29
#Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
#   -- Waiting for notification on: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.t3.srvr.T3Srvr.waitForDeath(T3Srvr.java:727)
#   ^-- Lock released while waiting: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:379)
#   weblogic.Server.main(Server.java:66)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.0.blockedObjectId=null
td.1.0.blockerId=null
td.1.0.condition=alive, in native, waiting, priority=5
td.1.0.header=Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
td.1.0.id=1
td.1.0.name=Main Thread
td.1.0.isBlocked=false
td.1.0.isBlocking=false
td.1.0.isDaemon=false
td.1.0.isDeadLocked=false
td.1.0.isIdle=true

#Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.1.1.blockedObjectId=null
td.1.1.blockerId=null
td.1.1.condition=alive, in native, priority=5, DAEMON
td.1.1.header=Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.1.1.id=2
td.1.1.name=(Signal Handler)
td.1.1.isBlocked=false
td.1.1.isBlocking=false
td.1.1.isDaemon=true
td.1.1.isDeadLocked=false
td.1.1.isIdle=false

#Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.1.2.blockedObjectId=null
td.1.2.blockerId=null
td.1.2.condition=alive, in native, native_waiting, priority=5, DAEMON
td.1.2.header=Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.1.2.id=3
td.1.2.name=(Code Generation Thread 1)
td.1.2.isBlocked=false
td.1.2.isBlocking=false
td.1.2.isDaemon=true
td.1.2.isDeadLocked=false
td.1.2.isIdle=false

#Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.1.3.blockedObjectId=null
td.1.3.blockerId=null
td.1.3.condition=alive, in native, native_waiting, priority=1, DAEMON
td.1.3.header=Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.1.3.id=4
td.1.3.name=(Code Optimization Thread 1)
td.1.3.isBlocked=false
td.1.3.isBlocking=false
td.1.3.isDaemon=true
td.1.3.isDeadLocked=false
td.1.3.isIdle=false

#Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.1.4.blockedObjectId=null
td.1.4.blockerId=null
td.1.4.condition=alive, in native, priority=5, DAEMON
td.1.4.header=Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.1.4.id=5
td.1.4.name=(GC Main Thread)
td.1.4.isBlocked=false
td.1.4.isBlocking=false
td.1.4.isDaemon=true
td.1.4.isDeadLocked=false
td.1.4.isIdle=false

#Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.1.5.blockedObjectId=null
td.1.5.blockerId=null
td.1.5.condition=alive, in native, native_waiting, priority=5, DAEMON
td.1.5.header=Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.1.5.id=6
td.1.5.name=(GC Worker Thread 1)
td.1.5.isBlocked=false
td.1.5.isBlocking=false
td.1.5.isDaemon=true
td.1.5.isDeadLocked=false
td.1.5.isIdle=false

#Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.1.6.blockedObjectId=null
td.1.6.blockerId=null
td.1.6.condition=alive, in native, priority=10, DAEMON
td.1.6.header=Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.1.6.id=7
td.1.6.name=(Hotspot Detector)
td.1.6.isBlocked=false
td.1.6.isBlocking=false
td.1.6.isDaemon=true
td.1.6.isDeadLocked=false
td.1.6.isIdle=false

#Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
#   jrockit.memory.Finalizer.getPendingFinalizee(Native Method)
#   jrockit.memory.Finalizer.access$100(Unknown Source)
#   jrockit.memory.Finalizer$4.run(Unknown Source)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.7.blockedObjectId=null
td.1.7.blockerId=null
td.1.7.condition=alive, in native, native_waiting, priority=8, DAEMON
td.1.7.header=Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
td.1.7.id=8
td.1.7.name=Finalizer
td.1.7.isBlocked=false
td.1.7.isBlocking=false
td.1.7.isDaemon=true
td.1.7.isDeadLocked=false
td.1.7.isIdle=false

#Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
#   java.lang.ref.Reference.getPending(Native Method)
#   java.lang.ref.Reference.access$000(Unknown Source)
#   java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.8.blockedObjectId=null
td.1.8.blockerId=null
td.1.8.condition=alive, in native, native_waiting, priority=10, DAEMON
td.1.8.header=Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
td.1.8.id=9
td.1.8.name=Reference Handler
td.1.8.isBlocked=false
td.1.8.isBlocking=false
td.1.8.isDaemon=true
td.1.8.isDeadLocked=false
td.1.8.isIdle=false

#Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@1bc88a[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:483)
#   ^-- Lock released while waiting: java.util.TaskQueue@1bc88a[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.9.blockedObjectId=null
td.1.9.blockerId=null
td.1.9.condition=alive, in native, waiting, priority=5, DAEMON
td.1.9.header=Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
td.1.9.id=12
td.1.9.name=Timer-0
td.1.9.isBlocked=false
td.1.9.isBlocking=false
td.1.9.isDaemon=true
td.1.9.isDeadLocked=false
td.1.9.isIdle=true

#Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@87830d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:509)
#   ^-- Lock released while waiting: java.util.TaskQueue@87830d[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.10.blockedObjectId=null
td.1.10.blockerId=null
td.1.10.condition=alive, in native, waiting, priority=5, DAEMON
td.1.10.header=Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
td.1.10.id=13
td.1.10.name=Timer-1
td.1.10.isBlocked=false
td.1.10.isBlocking=false
td.1.10.isDaemon=true
td.1.10.isDeadLocked=false
td.1.10.isIdle=true

#Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.11.blockedObjectId=847a42
td.1.11.blockerId=28
td.1.11.condition=alive, in native, blocked, priority=5, DAEMON
td.1.11.header=Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.1.11.id=14
td.1.11.name=[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'
td.1.11.isBlocked=true
td.1.11.isBlocking=false
td.1.11.isDaemon=true
td.1.11.isDeadLocked=false
td.1.11.isIdle=false

#Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.time.common.internal.TimeTable.snooze(TimeTable.java:286)
#   ^-- Lock released while waiting: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   weblogic.time.common.internal.TimeEventGenerator.run(TimeEventGenerator.java:117)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.12.blockedObjectId=null
td.1.12.blockerId=null
td.1.12.condition=alive, in native, waiting, priority=9, DAEMON
td.1.12.header=Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
td.1.12.id=15
td.1.12.name=weblogic.time.TimeEventGenerator
td.1.12.isBlocked=false
td.1.12.isBlocking=false
td.1.12.isDaemon=true
td.1.12.isDeadLocked=false
td.1.12.isIdle=true

#Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.timers.internal.TimerThread$Thread.run(TimerThread.java:255)
#   ^-- Lock released while waiting: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.1.13.blockedObjectId=null
td.1.13.blockerId=null
td.1.13.condition=alive, in native, waiting, priority=9, DAEMON
td.1.13.header=Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
td.1.13.id=16
td.1.13.name=weblogic.timers.TimerThread
td.1.13.isBlocked=false
td.1.13.isBlocking=false
td.1.13.isDaemon=true
td.1.13.isDeadLocked=false
td.1.13.isIdle=true

#Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:103)
#   ^-- Holding lock: java.lang.Object@847a41[fat lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.14.blockedObjectId=847a42
td.1.14.blockerId=28
td.1.14.condition=alive, in native, blocked, priority=5, DAEMON
td.1.14.header=Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.1.14.id=17
td.1.14.name=[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'
td.1.14.isBlocked=true
td.1.14.isBlocking=true
td.1.14.isDaemon=true
td.1.14.isDeadLocked=true
td.1.14.isIdle=false

#Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
#   jrockit.mapi.GarbageCollectorImpl.waitForEvent(Native Method)
#   jrockit.mapi.GarbageCollectorImpl.access$100(Unknown Source)
#   jrockit.mapi.GarbageCollectorImpl$GCEventThread.getNextEvent(Unknown Source)
#   jrockit.mapi.AsyncEventProvider$EventThread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.15.blockedObjectId=null
td.1.15.blockerId=null
td.1.15.condition=alive, in native, native_waiting, priority=5, DAEMON
td.1.15.header=Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
td.1.15.id=18
td.1.15.name=GC event thread
td.1.15.isBlocked=false
td.1.15.isBlocking=false
td.1.15.isDaemon=true
td.1.15.isDeadLocked=false
td.1.15.isIdle=false

#Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.16.blockedObjectId=null
td.1.16.blockerId=null
td.1.16.condition=alive, in native, priority=5, DAEMON
td.1.16.header=Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.1.16.id=19
td.1.16.name=ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'
td.1.16.isBlocked=false
td.1.16.isBlocking=false
td.1.16.isDaemon=true
td.1.16.isDeadLocked=false
td.1.16.isIdle=false

#Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.17.blockedObjectId=null
td.1.17.blockerId=null
td.1.17.condition=alive, in native, priority=5, DAEMON
td.1.17.header=Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.1.17.id=20
td.1.17.name=ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'
td.1.17.isBlocked=false
td.1.17.isBlocking=false
td.1.17.isDaemon=true
td.1.17.isDeadLocked=false
td.1.17.isIdle=false

#Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
#   -- Waiting for notification on: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   com.octetstring.vde.backend.standard.TransactionProcessor.waitChange(TransactionProcessor.java:367)
#   ^-- Lock released while waiting: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   com.octetstring.vde.backend.standard.TransactionProcessor.run(TransactionProcessor.java:212)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.18.blockedObjectId=null
td.1.18.blockerId=null
td.1.18.condition=alive, in native, waiting, priority=2, DAEMON
td.1.18.header=Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
td.1.18.id=23
td.1.18.name=VDE Transaction Processor Thread
td.1.18.isBlocked=false
td.1.18.isBlocking=false
td.1.18.isDaemon=true
td.1.18.isDeadLocked=false
td.1.18.isIdle=true

#Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.19.blockedObjectId=847a41
td.1.19.blockerId=17
td.1.19.condition=alive, in native, blocked, priority=5, DAEMON
td.1.19.header=Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.1.19.id=25
td.1.19.name=[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'
td.1.19.isBlocked=true
td.1.19.isBlocking=false
td.1.19.isDaemon=true
td.1.19.isDeadLocked=false
td.1.19.isIdle=false

#Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@d57544[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.Thread.whPark(Unknown Source)
#   ^-- Lock released while waiting: java.lang.Object@d57544[fat lock]
#   java.util.concurrent.locks.LockSupport.park(Unknown Source)
#   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1772)
#   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
#   weblogic.utils.concurrent.JDK15ConcurrentBlockingQueue.take(JDK15ConcurrentBlockingQueue.java:89)
#   weblogic.store.internal.PersistentStoreImpl.getOutstandingWork(PersistentStoreImpl.java:520)
#   weblogic.store.internal.PersistentStoreImpl.run(PersistentStoreImpl.java:556)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.20.blockedObjectId=null
td.1.20.blockerId=null
td.1.20.condition=alive, in native, parked, priority=10, DAEMON
td.1.20.header=Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
td.1.20.id=26
td.1.20.name=weblogic.store._WLS_AdminServer
td.1.20.isBlocked=false
td.1.20.isBlocking=false
td.1.20.isDaemon=true
td.1.20.isDeadLocked=false
td.1.20.isIdle=false

#Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.21.blockedObjectId=847a42
td.1.21.blockerId=28
td.1.21.condition=alive, in native, blocked, priority=5, DAEMON
td.1.21.header=Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.1.21.id=27
td.1.21.name=[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'
td.1.21.isBlocked=true
td.1.21.isBlocking=false
td.1.21.isDaemon=true
td.1.21.isDeadLocked=false
td.1.21.isIdle=false

#Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:112)
#   ^-- Holding lock: java.lang.Object@847a42[thin lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.22.blockedObjectId=847a41
td.1.22.blockerId=17
td.1.22.condition=alive, in native, blocked, priority=5, DAEMON
td.1.22.header=Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.1.22.id=28
td.1.22.name=[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'
td.1.22.isBlocked=true
td.1.22.isBlocking=true
td.1.22.isDaemon=true
td.1.22.isDeadLocked=true
td.1.22.isIdle=false

#Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a546bf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.23.blockedObjectId=null
td.1.23.blockerId=null
td.1.23.condition=alive, in native, priority=9, DAEMON
td.1.23.header=Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
td.1.23.id=30
td.1.23.name=DynamicListenThread[Default[1]]
td.1.23.isBlocked=false
td.1.23.isBlocking=false
td.1.23.isDaemon=true
td.1.23.isDeadLocked=false
td.1.23.isIdle=false

#Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a33bcf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.24.blockedObjectId=null
td.1.24.blockerId=null
td.1.24.condition=alive, in native, priority=9, DAEMON
td.1.24.header=Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
td.1.24.id=31
td.1.24.name=DynamicListenThread[Default]
td.1.24.isBlocked=false
td.1.24.isBlocking=false
td.1.24.isDaemon=true
td.1.24.isDeadLocked=false
td.1.24.isIdle=false

#Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
#   -- Waiting for notification on: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
#   ^-- Lock released while waiting: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
#   workshop.util.filesystem.FSCache$FSCacheRefQueueThread.run(FSCache.java:65)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.25.blockedObjectId=null
td.1.25.blockerId=null
td.1.25.condition=alive, in native, waiting, priority=1, DAEMON
td.1.25.header=Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
td.1.25.id=34
td.1.25.name=FSCacheRefQueueThread
td.1.25.isBlocked=false
td.1.25.isBlocking=false
td.1.25.isDaemon=true
td.1.25.isDeadLocked=false
td.1.25.isIdle=true

#Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$CommitThread.run(TxIndexedFileImpl.java:591)
#   ^-- Lock released while waiting: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.1.26.blockedObjectId=null
td.1.26.blockerId=null
td.1.26.condition=alive, in native, waiting, priority=5, DAEMON
td.1.26.header=Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
td.1.26.id=37
td.1.26.name=cache-CommitThread
td.1.26.isBlocked=false
td.1.26.isBlocking=false
td.1.26.isDaemon=true
td.1.26.isDeadLocked=false
td.1.26.isIdle=true

#Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$PrepareThread.run(TxIndexedFileImpl.java:536)
#   ^-- Lock released while waiting: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.1.27.blockedObjectId=null
td.1.27.blockerId=null
td.1.27.condition=alive, in native, waiting, priority=5, DAEMON
td.1.27.header=Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
td.1.27.id=38
td.1.27.name=cache-PrepareThread
td.1.27.isBlocked=false
td.1.27.isBlocking=false
td.1.27.isDaemon=true
td.1.27.isDeadLocked=false
td.1.27.isIdle=true

#Thread-45 "[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
#   jrockit.vm.Threads.getThreadSnapShot0(Native Method)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.mapi.ThreadSnapshotImpl.getThreadSnapshot(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadSnapshots(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadStackDump(Unknown Source)
#   weblogic.platform.JRockitVM.threadDump(JRockitVM.java:35)
#   weblogic.common.internal.AdminProxy.execute(AdminProxy.java:203)
#   weblogic.t3.srvr.ClientRequest$1.run(ClientContext.java:711)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:363)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:147)
#   weblogic.t3.srvr.ClientRequest.run(ClientContext.java:708)
#   weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.1.28.blockedObjectId=null
td.1.28.blockerId=null
td.1.28.condition=alive, in native, priority=5, DAEMON
td.1.28.header=Thread-45 "[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
td.1.28.id=45
td.1.28.name=[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'
td.1.28.isBlocked=false
td.1.28.isBlocking=false
td.1.28.isDaemon=true
td.1.28.isDeadLocked=false
td.1.28.isIdle=false

ftd.2.deadLockSize=1
ftd.2.threadCount=33
#Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
#   -- Waiting for notification on: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.t3.srvr.T3Srvr.waitForDeath(T3Srvr.java:727)
#   ^-- Lock released while waiting: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:379)
#   weblogic.Server.main(Server.java:66)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.0.blockedObjectId=null
td.2.0.blockerId=null
td.2.0.condition=alive, in native, waiting, priority=5
td.2.0.header=Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
td.2.0.id=1
td.2.0.name=Main Thread
td.2.0.isBlocked=false
td.2.0.isBlocking=false
td.2.0.isDaemon=false
td.2.0.isDeadLocked=false
td.2.0.isIdle=true

#Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.2.1.blockedObjectId=null
td.2.1.blockerId=null
td.2.1.condition=alive, in native, priority=5, DAEMON
td.2.1.header=Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.2.1.id=2
td.2.1.name=(Signal Handler)
td.2.1.isBlocked=false
td.2.1.isBlocking=false
td.2.1.isDaemon=true
td.2.1.isDeadLocked=false
td.2.1.isIdle=false

#Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.2.2.blockedObjectId=null
td.2.2.blockerId=null
td.2.2.condition=alive, in native, native_waiting, priority=5, DAEMON
td.2.2.header=Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.2.2.id=3
td.2.2.name=(Code Generation Thread 1)
td.2.2.isBlocked=false
td.2.2.isBlocking=false
td.2.2.isDaemon=true
td.2.2.isDeadLocked=false
td.2.2.isIdle=false

#Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.2.3.blockedObjectId=null
td.2.3.blockerId=null
td.2.3.condition=alive, in native, native_waiting, priority=1, DAEMON
td.2.3.header=Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.2.3.id=4
td.2.3.name=(Code Optimization Thread 1)
td.2.3.isBlocked=false
td.2.3.isBlocking=false
td.2.3.isDaemon=true
td.2.3.isDeadLocked=false
td.2.3.isIdle=false

#Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.2.4.blockedObjectId=null
td.2.4.blockerId=null
td.2.4.condition=alive, in native, priority=5, DAEMON
td.2.4.header=Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.2.4.id=5
td.2.4.name=(GC Main Thread)
td.2.4.isBlocked=false
td.2.4.isBlocking=false
td.2.4.isDaemon=true
td.2.4.isDeadLocked=false
td.2.4.isIdle=false

#Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.2.5.blockedObjectId=null
td.2.5.blockerId=null
td.2.5.condition=alive, in native, native_waiting, priority=5, DAEMON
td.2.5.header=Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.2.5.id=6
td.2.5.name=(GC Worker Thread 1)
td.2.5.isBlocked=false
td.2.5.isBlocking=false
td.2.5.isDaemon=true
td.2.5.isDeadLocked=false
td.2.5.isIdle=false

#Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.2.6.blockedObjectId=null
td.2.6.blockerId=null
td.2.6.condition=alive, in native, priority=10, DAEMON
td.2.6.header=Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.2.6.id=7
td.2.6.name=(Hotspot Detector)
td.2.6.isBlocked=false
td.2.6.isBlocking=false
td.2.6.isDaemon=true
td.2.6.isDeadLocked=false
td.2.6.isIdle=false

#Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
#   jrockit.memory.Finalizer.getPendingFinalizee(Native Method)
#   jrockit.memory.Finalizer.access$100(Unknown Source)
#   jrockit.memory.Finalizer$4.run(Unknown Source)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.7.blockedObjectId=null
td.2.7.blockerId=null
td.2.7.condition=alive, in native, native_waiting, priority=8, DAEMON
td.2.7.header=Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
td.2.7.id=8
td.2.7.name=Finalizer
td.2.7.isBlocked=false
td.2.7.isBlocking=false
td.2.7.isDaemon=true
td.2.7.isDeadLocked=false
td.2.7.isIdle=false

#Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
#   java.lang.ref.Reference.getPending(Native Method)
#   java.lang.ref.Reference.access$000(Unknown Source)
#   java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.8.blockedObjectId=null
td.2.8.blockerId=null
td.2.8.condition=alive, in native, native_waiting, priority=10, DAEMON
td.2.8.header=Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
td.2.8.id=9
td.2.8.name=Reference Handler
td.2.8.isBlocked=false
td.2.8.isBlocking=false
td.2.8.isDaemon=true
td.2.8.isDeadLocked=false
td.2.8.isIdle=false

#Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@1bc88a[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:483)
#   ^-- Lock released while waiting: java.util.TaskQueue@1bc88a[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.9.blockedObjectId=null
td.2.9.blockerId=null
td.2.9.condition=alive, in native, waiting, priority=5, DAEMON
td.2.9.header=Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
td.2.9.id=12
td.2.9.name=Timer-0
td.2.9.isBlocked=false
td.2.9.isBlocking=false
td.2.9.isDaemon=true
td.2.9.isDeadLocked=false
td.2.9.isIdle=true

#Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@87830d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:509)
#   ^-- Lock released while waiting: java.util.TaskQueue@87830d[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.10.blockedObjectId=null
td.2.10.blockerId=null
td.2.10.condition=alive, in native, waiting, priority=5, DAEMON
td.2.10.header=Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
td.2.10.id=13
td.2.10.name=Timer-1
td.2.10.isBlocked=false
td.2.10.isBlocking=false
td.2.10.isDaemon=true
td.2.10.isDeadLocked=false
td.2.10.isIdle=true

#Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.11.blockedObjectId=847a42
td.2.11.blockerId=28
td.2.11.condition=alive, in native, blocked, priority=5, DAEMON
td.2.11.header=Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.2.11.id=14
td.2.11.name=[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.11.isBlocked=true
td.2.11.isBlocking=false
td.2.11.isDaemon=true
td.2.11.isDeadLocked=false
td.2.11.isIdle=false

#Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.time.common.internal.TimeTable.snooze(TimeTable.java:286)
#   ^-- Lock released while waiting: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   weblogic.time.common.internal.TimeEventGenerator.run(TimeEventGenerator.java:117)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.12.blockedObjectId=null
td.2.12.blockerId=null
td.2.12.condition=alive, in native, waiting, priority=9, DAEMON
td.2.12.header=Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
td.2.12.id=15
td.2.12.name=weblogic.time.TimeEventGenerator
td.2.12.isBlocked=false
td.2.12.isBlocking=false
td.2.12.isDaemon=true
td.2.12.isDeadLocked=false
td.2.12.isIdle=true

#Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.timers.internal.TimerThread$Thread.run(TimerThread.java:255)
#   ^-- Lock released while waiting: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.2.13.blockedObjectId=null
td.2.13.blockerId=null
td.2.13.condition=alive, in native, waiting, priority=9, DAEMON
td.2.13.header=Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
td.2.13.id=16
td.2.13.name=weblogic.timers.TimerThread
td.2.13.isBlocked=false
td.2.13.isBlocking=false
td.2.13.isDaemon=true
td.2.13.isDeadLocked=false
td.2.13.isIdle=true

#Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:103)
#   ^-- Holding lock: java.lang.Object@847a41[fat lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.14.blockedObjectId=847a42
td.2.14.blockerId=28
td.2.14.condition=alive, in native, blocked, priority=5, DAEMON
td.2.14.header=Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.2.14.id=17
td.2.14.name=[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.14.isBlocked=true
td.2.14.isBlocking=true
td.2.14.isDaemon=true
td.2.14.isDeadLocked=true
td.2.14.isIdle=false

#Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
#   jrockit.mapi.GarbageCollectorImpl.waitForEvent(Native Method)
#   jrockit.mapi.GarbageCollectorImpl.access$100(Unknown Source)
#   jrockit.mapi.GarbageCollectorImpl$GCEventThread.getNextEvent(Unknown Source)
#   jrockit.mapi.AsyncEventProvider$EventThread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.15.blockedObjectId=null
td.2.15.blockerId=null
td.2.15.condition=alive, in native, native_waiting, priority=5, DAEMON
td.2.15.header=Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
td.2.15.id=18
td.2.15.name=GC event thread
td.2.15.isBlocked=false
td.2.15.isBlocking=false
td.2.15.isDaemon=true
td.2.15.isDeadLocked=false
td.2.15.isIdle=false

#Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.16.blockedObjectId=null
td.2.16.blockerId=null
td.2.16.condition=alive, in native, priority=5, DAEMON
td.2.16.header=Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.2.16.id=19
td.2.16.name=ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'
td.2.16.isBlocked=false
td.2.16.isBlocking=false
td.2.16.isDaemon=true
td.2.16.isDeadLocked=false
td.2.16.isIdle=false

#Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.17.blockedObjectId=null
td.2.17.blockerId=null
td.2.17.condition=alive, in native, priority=5, DAEMON
td.2.17.header=Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.2.17.id=20
td.2.17.name=ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'
td.2.17.isBlocked=false
td.2.17.isBlocking=false
td.2.17.isDaemon=true
td.2.17.isDeadLocked=false
td.2.17.isIdle=false

#Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
#   -- Waiting for notification on: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   com.octetstring.vde.backend.standard.TransactionProcessor.waitChange(TransactionProcessor.java:367)
#   ^-- Lock released while waiting: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   com.octetstring.vde.backend.standard.TransactionProcessor.run(TransactionProcessor.java:212)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.18.blockedObjectId=null
td.2.18.blockerId=null
td.2.18.condition=alive, in native, waiting, priority=2, DAEMON
td.2.18.header=Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
td.2.18.id=23
td.2.18.name=VDE Transaction Processor Thread
td.2.18.isBlocked=false
td.2.18.isBlocking=false
td.2.18.isDaemon=true
td.2.18.isDeadLocked=false
td.2.18.isIdle=true

#Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.19.blockedObjectId=847a41
td.2.19.blockerId=17
td.2.19.condition=alive, in native, blocked, priority=5, DAEMON
td.2.19.header=Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.2.19.id=25
td.2.19.name=[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.19.isBlocked=true
td.2.19.isBlocking=false
td.2.19.isDaemon=true
td.2.19.isDeadLocked=false
td.2.19.isIdle=false

#Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@d57544[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.Thread.whPark(Unknown Source)
#   ^-- Lock released while waiting: java.lang.Object@d57544[fat lock]
#   java.util.concurrent.locks.LockSupport.park(Unknown Source)
#   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1772)
#   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
#   weblogic.utils.concurrent.JDK15ConcurrentBlockingQueue.take(JDK15ConcurrentBlockingQueue.java:89)
#   weblogic.store.internal.PersistentStoreImpl.getOutstandingWork(PersistentStoreImpl.java:520)
#   weblogic.store.internal.PersistentStoreImpl.run(PersistentStoreImpl.java:556)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.20.blockedObjectId=null
td.2.20.blockerId=null
td.2.20.condition=alive, in native, parked, priority=10, DAEMON
td.2.20.header=Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
td.2.20.id=26
td.2.20.name=weblogic.store._WLS_AdminServer
td.2.20.isBlocked=false
td.2.20.isBlocking=false
td.2.20.isDaemon=true
td.2.20.isDeadLocked=false
td.2.20.isIdle=false

#Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.21.blockedObjectId=847a42
td.2.21.blockerId=28
td.2.21.condition=alive, in native, blocked, priority=5, DAEMON
td.2.21.header=Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.2.21.id=27
td.2.21.name=[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.21.isBlocked=true
td.2.21.isBlocking=false
td.2.21.isDaemon=true
td.2.21.isDeadLocked=false
td.2.21.isIdle=false

#Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:112)
#   ^-- Holding lock: java.lang.Object@847a42[thin lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.22.blockedObjectId=847a41
td.2.22.blockerId=17
td.2.22.condition=alive, in native, blocked, priority=5, DAEMON
td.2.22.header=Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.2.22.id=28
td.2.22.name=[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.22.isBlocked=true
td.2.22.isBlocking=true
td.2.22.isDaemon=true
td.2.22.isDeadLocked=true
td.2.22.isIdle=false

#Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a546bf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.23.blockedObjectId=null
td.2.23.blockerId=null
td.2.23.condition=alive, in native, priority=9, DAEMON
td.2.23.header=Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
td.2.23.id=30
td.2.23.name=DynamicListenThread[Default[1]]
td.2.23.isBlocked=false
td.2.23.isBlocking=false
td.2.23.isDaemon=true
td.2.23.isDeadLocked=false
td.2.23.isIdle=false

#Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a33bcf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.24.blockedObjectId=null
td.2.24.blockerId=null
td.2.24.condition=alive, in native, priority=9, DAEMON
td.2.24.header=Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
td.2.24.id=31
td.2.24.name=DynamicListenThread[Default]
td.2.24.isBlocked=false
td.2.24.isBlocking=false
td.2.24.isDaemon=true
td.2.24.isDeadLocked=false
td.2.24.isIdle=false

#Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
#   -- Waiting for notification on: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
#   ^-- Lock released while waiting: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
#   workshop.util.filesystem.FSCache$FSCacheRefQueueThread.run(FSCache.java:65)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.25.blockedObjectId=null
td.2.25.blockerId=null
td.2.25.condition=alive, in native, waiting, priority=1, DAEMON
td.2.25.header=Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
td.2.25.id=34
td.2.25.name=FSCacheRefQueueThread
td.2.25.isBlocked=false
td.2.25.isBlocking=false
td.2.25.isDaemon=true
td.2.25.isDeadLocked=false
td.2.25.isIdle=true

#Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$CommitThread.run(TxIndexedFileImpl.java:591)
#   ^-- Lock released while waiting: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.2.26.blockedObjectId=null
td.2.26.blockerId=null
td.2.26.condition=alive, in native, waiting, priority=5, DAEMON
td.2.26.header=Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
td.2.26.id=37
td.2.26.name=cache-CommitThread
td.2.26.isBlocked=false
td.2.26.isBlocking=false
td.2.26.isDaemon=true
td.2.26.isDeadLocked=false
td.2.26.isIdle=true

#Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$PrepareThread.run(TxIndexedFileImpl.java:536)
#   ^-- Lock released while waiting: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.2.27.blockedObjectId=null
td.2.27.blockerId=null
td.2.27.condition=alive, in native, waiting, priority=5, DAEMON
td.2.27.header=Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
td.2.27.id=38
td.2.27.name=cache-PrepareThread
td.2.27.isBlocked=false
td.2.27.isBlocking=false
td.2.27.isDaemon=true
td.2.27.isDeadLocked=false
td.2.27.isIdle=true

#Thread-45 "[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@4247fc4b[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@4247fc4b[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.28.blockedObjectId=null
td.2.28.blockerId=null
td.2.28.condition=alive, in native, waiting, priority=5, DAEMON
td.2.28.header=Thread-45 "[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.2.28.id=45
td.2.28.name=[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.28.isBlocked=false
td.2.28.isBlocking=false
td.2.28.isDaemon=true
td.2.28.isDeadLocked=false
td.2.28.isIdle=true

#Thread-46 "[STANDBY] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@ffffffffcf82adcc[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@ffffffffcf82adcc[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.29.blockedObjectId=null
td.2.29.blockerId=null
td.2.29.condition=alive, in native, waiting, priority=5, DAEMON
td.2.29.header=Thread-46 "[STANDBY] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.2.29.id=46
td.2.29.name=[STANDBY] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.29.isBlocked=false
td.2.29.isBlocking=false
td.2.29.isDaemon=true
td.2.29.isDeadLocked=false
td.2.29.isIdle=true

#Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.30.blockedObjectId=847a42
td.2.30.blockerId=28
td.2.30.condition=alive, in native, blocked, priority=5, DAEMON
td.2.30.header=Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.2.30.id=47
td.2.30.name=[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.30.isBlocked=true
td.2.30.isBlocking=false
td.2.30.isDaemon=true
td.2.30.isDeadLocked=false
td.2.30.isIdle=false

#Thread-48 "[STANDBY] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
#   jrockit.vm.Threads.getThreadSnapShot0(Native Method)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.mapi.ThreadSnapshotImpl.getThreadSnapshot(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadSnapshots(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadStackDump(Unknown Source)
#   weblogic.platform.JRockitVM.threadDump(JRockitVM.java:35)
#   weblogic.common.internal.AdminProxy.execute(AdminProxy.java:203)
#   weblogic.t3.srvr.ClientRequest$1.run(ClientContext.java:711)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:363)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:147)
#   weblogic.t3.srvr.ClientRequest.run(ClientContext.java:708)
#   weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.31.blockedObjectId=null
td.2.31.blockerId=null
td.2.31.condition=alive, in native, priority=5, DAEMON
td.2.31.header=Thread-48 "[STANDBY] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
td.2.31.id=48
td.2.31.name=[STANDBY] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.31.isBlocked=false
td.2.31.isBlocking=false
td.2.31.isDaemon=true
td.2.31.isDeadLocked=false
td.2.31.isIdle=false

#Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:110)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.2.32.blockedObjectId=847a42
td.2.32.blockerId=28
td.2.32.condition=alive, in native, blocked, priority=5, DAEMON
td.2.32.header=Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.2.32.id=49
td.2.32.name=[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'
td.2.32.isBlocked=true
td.2.32.isBlocking=false
td.2.32.isDaemon=true
td.2.32.isDeadLocked=false
td.2.32.isIdle=false

ftd.3.deadLockSize=1
ftd.3.threadCount=33
#Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
#   -- Waiting for notification on: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.t3.srvr.T3Srvr.waitForDeath(T3Srvr.java:727)
#   ^-- Lock released while waiting: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:379)
#   weblogic.Server.main(Server.java:66)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.0.blockedObjectId=null
td.3.0.blockerId=null
td.3.0.condition=alive, in native, waiting, priority=5
td.3.0.header=Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
td.3.0.id=1
td.3.0.name=Main Thread
td.3.0.isBlocked=false
td.3.0.isBlocking=false
td.3.0.isDaemon=false
td.3.0.isDeadLocked=false
td.3.0.isIdle=true

#Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.3.1.blockedObjectId=null
td.3.1.blockerId=null
td.3.1.condition=alive, in native, priority=5, DAEMON
td.3.1.header=Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.3.1.id=2
td.3.1.name=(Signal Handler)
td.3.1.isBlocked=false
td.3.1.isBlocking=false
td.3.1.isDaemon=true
td.3.1.isDeadLocked=false
td.3.1.isIdle=false

#Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.3.2.blockedObjectId=null
td.3.2.blockerId=null
td.3.2.condition=alive, in native, native_waiting, priority=5, DAEMON
td.3.2.header=Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.3.2.id=3
td.3.2.name=(Code Generation Thread 1)
td.3.2.isBlocked=false
td.3.2.isBlocking=false
td.3.2.isDaemon=true
td.3.2.isDeadLocked=false
td.3.2.isIdle=false

#Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.3.3.blockedObjectId=null
td.3.3.blockerId=null
td.3.3.condition=alive, in native, native_waiting, priority=1, DAEMON
td.3.3.header=Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.3.3.id=4
td.3.3.name=(Code Optimization Thread 1)
td.3.3.isBlocked=false
td.3.3.isBlocking=false
td.3.3.isDaemon=true
td.3.3.isDeadLocked=false
td.3.3.isIdle=false

#Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.3.4.blockedObjectId=null
td.3.4.blockerId=null
td.3.4.condition=alive, in native, priority=5, DAEMON
td.3.4.header=Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.3.4.id=5
td.3.4.name=(GC Main Thread)
td.3.4.isBlocked=false
td.3.4.isBlocking=false
td.3.4.isDaemon=true
td.3.4.isDeadLocked=false
td.3.4.isIdle=false

#Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.3.5.blockedObjectId=null
td.3.5.blockerId=null
td.3.5.condition=alive, in native, native_waiting, priority=5, DAEMON
td.3.5.header=Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.3.5.id=6
td.3.5.name=(GC Worker Thread 1)
td.3.5.isBlocked=false
td.3.5.isBlocking=false
td.3.5.isDaemon=true
td.3.5.isDeadLocked=false
td.3.5.isIdle=false

#Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.3.6.blockedObjectId=null
td.3.6.blockerId=null
td.3.6.condition=alive, in native, priority=10, DAEMON
td.3.6.header=Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.3.6.id=7
td.3.6.name=(Hotspot Detector)
td.3.6.isBlocked=false
td.3.6.isBlocking=false
td.3.6.isDaemon=true
td.3.6.isDeadLocked=false
td.3.6.isIdle=false

#Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
#   jrockit.memory.Finalizer.getPendingFinalizee(Native Method)
#   jrockit.memory.Finalizer.access$100(Unknown Source)
#   jrockit.memory.Finalizer$4.run(Unknown Source)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.7.blockedObjectId=null
td.3.7.blockerId=null
td.3.7.condition=alive, in native, native_waiting, priority=8, DAEMON
td.3.7.header=Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
td.3.7.id=8
td.3.7.name=Finalizer
td.3.7.isBlocked=false
td.3.7.isBlocking=false
td.3.7.isDaemon=true
td.3.7.isDeadLocked=false
td.3.7.isIdle=false

#Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
#   java.lang.ref.Reference.getPending(Native Method)
#   java.lang.ref.Reference.access$000(Unknown Source)
#   java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.8.blockedObjectId=null
td.3.8.blockerId=null
td.3.8.condition=alive, in native, native_waiting, priority=10, DAEMON
td.3.8.header=Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
td.3.8.id=9
td.3.8.name=Reference Handler
td.3.8.isBlocked=false
td.3.8.isBlocking=false
td.3.8.isDaemon=true
td.3.8.isDeadLocked=false
td.3.8.isIdle=false

#Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@1bc88a[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:483)
#   ^-- Lock released while waiting: java.util.TaskQueue@1bc88a[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.9.blockedObjectId=null
td.3.9.blockerId=null
td.3.9.condition=alive, in native, waiting, priority=5, DAEMON
td.3.9.header=Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
td.3.9.id=12
td.3.9.name=Timer-0
td.3.9.isBlocked=false
td.3.9.isBlocking=false
td.3.9.isDaemon=true
td.3.9.isDeadLocked=false
td.3.9.isIdle=true

#Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@87830d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:509)
#   ^-- Lock released while waiting: java.util.TaskQueue@87830d[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.10.blockedObjectId=null
td.3.10.blockerId=null
td.3.10.condition=alive, in native, waiting, priority=5, DAEMON
td.3.10.header=Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
td.3.10.id=13
td.3.10.name=Timer-1
td.3.10.isBlocked=false
td.3.10.isBlocking=false
td.3.10.isDaemon=true
td.3.10.isDeadLocked=false
td.3.10.isIdle=true

#Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.11.blockedObjectId=847a42
td.3.11.blockerId=28
td.3.11.condition=alive, in native, blocked, priority=5, DAEMON
td.3.11.header=Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.11.id=14
td.3.11.name=[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.11.isBlocked=true
td.3.11.isBlocking=false
td.3.11.isDaemon=true
td.3.11.isDeadLocked=false
td.3.11.isIdle=false

#Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.time.common.internal.TimeTable.snooze(TimeTable.java:286)
#   ^-- Lock released while waiting: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   weblogic.time.common.internal.TimeEventGenerator.run(TimeEventGenerator.java:117)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.12.blockedObjectId=null
td.3.12.blockerId=null
td.3.12.condition=alive, in native, waiting, priority=9, DAEMON
td.3.12.header=Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
td.3.12.id=15
td.3.12.name=weblogic.time.TimeEventGenerator
td.3.12.isBlocked=false
td.3.12.isBlocking=false
td.3.12.isDaemon=true
td.3.12.isDeadLocked=false
td.3.12.isIdle=true

#Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.timers.internal.TimerThread$Thread.run(TimerThread.java:255)
#   ^-- Lock released while waiting: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.3.13.blockedObjectId=null
td.3.13.blockerId=null
td.3.13.condition=alive, in native, waiting, priority=9, DAEMON
td.3.13.header=Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
td.3.13.id=16
td.3.13.name=weblogic.timers.TimerThread
td.3.13.isBlocked=false
td.3.13.isBlocking=false
td.3.13.isDaemon=true
td.3.13.isDeadLocked=false
td.3.13.isIdle=true

#Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:103)
#   ^-- Holding lock: java.lang.Object@847a41[fat lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.14.blockedObjectId=847a42
td.3.14.blockerId=28
td.3.14.condition=alive, in native, blocked, priority=5, DAEMON
td.3.14.header=Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.14.id=17
td.3.14.name=[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.14.isBlocked=true
td.3.14.isBlocking=true
td.3.14.isDaemon=true
td.3.14.isDeadLocked=true
td.3.14.isIdle=false

#Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
#   jrockit.mapi.GarbageCollectorImpl.waitForEvent(Native Method)
#   jrockit.mapi.GarbageCollectorImpl.access$100(Unknown Source)
#   jrockit.mapi.GarbageCollectorImpl$GCEventThread.getNextEvent(Unknown Source)
#   jrockit.mapi.AsyncEventProvider$EventThread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.15.blockedObjectId=null
td.3.15.blockerId=null
td.3.15.condition=alive, in native, native_waiting, priority=5, DAEMON
td.3.15.header=Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
td.3.15.id=18
td.3.15.name=GC event thread
td.3.15.isBlocked=false
td.3.15.isBlocking=false
td.3.15.isDaemon=true
td.3.15.isDeadLocked=false
td.3.15.isIdle=false

#Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.16.blockedObjectId=null
td.3.16.blockerId=null
td.3.16.condition=alive, in native, priority=5, DAEMON
td.3.16.header=Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.3.16.id=19
td.3.16.name=ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'
td.3.16.isBlocked=false
td.3.16.isBlocking=false
td.3.16.isDaemon=true
td.3.16.isDeadLocked=false
td.3.16.isIdle=false

#Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.17.blockedObjectId=null
td.3.17.blockerId=null
td.3.17.condition=alive, in native, priority=5, DAEMON
td.3.17.header=Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.3.17.id=20
td.3.17.name=ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'
td.3.17.isBlocked=false
td.3.17.isBlocking=false
td.3.17.isDaemon=true
td.3.17.isDeadLocked=false
td.3.17.isIdle=false

#Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
#   -- Waiting for notification on: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   com.octetstring.vde.backend.standard.TransactionProcessor.waitChange(TransactionProcessor.java:367)
#   ^-- Lock released while waiting: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   com.octetstring.vde.backend.standard.TransactionProcessor.run(TransactionProcessor.java:212)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.18.blockedObjectId=null
td.3.18.blockerId=null
td.3.18.condition=alive, in native, waiting, priority=2, DAEMON
td.3.18.header=Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
td.3.18.id=23
td.3.18.name=VDE Transaction Processor Thread
td.3.18.isBlocked=false
td.3.18.isBlocking=false
td.3.18.isDaemon=true
td.3.18.isDeadLocked=false
td.3.18.isIdle=true

#Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.19.blockedObjectId=847a41
td.3.19.blockerId=17
td.3.19.condition=alive, in native, blocked, priority=5, DAEMON
td.3.19.header=Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.19.id=25
td.3.19.name=[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.19.isBlocked=true
td.3.19.isBlocking=false
td.3.19.isDaemon=true
td.3.19.isDeadLocked=false
td.3.19.isIdle=false

#Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@d57544[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.Thread.whPark(Unknown Source)
#   ^-- Lock released while waiting: java.lang.Object@d57544[fat lock]
#   java.util.concurrent.locks.LockSupport.park(Unknown Source)
#   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1772)
#   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
#   weblogic.utils.concurrent.JDK15ConcurrentBlockingQueue.take(JDK15ConcurrentBlockingQueue.java:89)
#   weblogic.store.internal.PersistentStoreImpl.getOutstandingWork(PersistentStoreImpl.java:520)
#   weblogic.store.internal.PersistentStoreImpl.run(PersistentStoreImpl.java:556)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.20.blockedObjectId=null
td.3.20.blockerId=null
td.3.20.condition=alive, in native, parked, priority=10, DAEMON
td.3.20.header=Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
td.3.20.id=26
td.3.20.name=weblogic.store._WLS_AdminServer
td.3.20.isBlocked=false
td.3.20.isBlocking=false
td.3.20.isDaemon=true
td.3.20.isDeadLocked=false
td.3.20.isIdle=false

#Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.21.blockedObjectId=847a42
td.3.21.blockerId=28
td.3.21.condition=alive, in native, blocked, priority=5, DAEMON
td.3.21.header=Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.21.id=27
td.3.21.name=[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.21.isBlocked=true
td.3.21.isBlocking=false
td.3.21.isDaemon=true
td.3.21.isDeadLocked=false
td.3.21.isIdle=false

#Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:112)
#   ^-- Holding lock: java.lang.Object@847a42[thin lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.22.blockedObjectId=847a41
td.3.22.blockerId=17
td.3.22.condition=alive, in native, blocked, priority=5, DAEMON
td.3.22.header=Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.22.id=28
td.3.22.name=[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.22.isBlocked=true
td.3.22.isBlocking=true
td.3.22.isDaemon=true
td.3.22.isDeadLocked=true
td.3.22.isIdle=false

#Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a546bf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.23.blockedObjectId=null
td.3.23.blockerId=null
td.3.23.condition=alive, in native, priority=9, DAEMON
td.3.23.header=Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
td.3.23.id=30
td.3.23.name=DynamicListenThread[Default[1]]
td.3.23.isBlocked=false
td.3.23.isBlocking=false
td.3.23.isDaemon=true
td.3.23.isDeadLocked=false
td.3.23.isIdle=false

#Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a33bcf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.24.blockedObjectId=null
td.3.24.blockerId=null
td.3.24.condition=alive, in native, priority=9, DAEMON
td.3.24.header=Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
td.3.24.id=31
td.3.24.name=DynamicListenThread[Default]
td.3.24.isBlocked=false
td.3.24.isBlocking=false
td.3.24.isDaemon=true
td.3.24.isDeadLocked=false
td.3.24.isIdle=false

#Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
#   -- Waiting for notification on: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
#   ^-- Lock released while waiting: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
#   workshop.util.filesystem.FSCache$FSCacheRefQueueThread.run(FSCache.java:65)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.25.blockedObjectId=null
td.3.25.blockerId=null
td.3.25.condition=alive, in native, waiting, priority=1, DAEMON
td.3.25.header=Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
td.3.25.id=34
td.3.25.name=FSCacheRefQueueThread
td.3.25.isBlocked=false
td.3.25.isBlocking=false
td.3.25.isDaemon=true
td.3.25.isDeadLocked=false
td.3.25.isIdle=true

#Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$CommitThread.run(TxIndexedFileImpl.java:591)
#   ^-- Lock released while waiting: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.3.26.blockedObjectId=null
td.3.26.blockerId=null
td.3.26.condition=alive, in native, waiting, priority=5, DAEMON
td.3.26.header=Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
td.3.26.id=37
td.3.26.name=cache-CommitThread
td.3.26.isBlocked=false
td.3.26.isBlocking=false
td.3.26.isDaemon=true
td.3.26.isDeadLocked=false
td.3.26.isIdle=true

#Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$PrepareThread.run(TxIndexedFileImpl.java:536)
#   ^-- Lock released while waiting: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.3.27.blockedObjectId=null
td.3.27.blockerId=null
td.3.27.condition=alive, in native, waiting, priority=5, DAEMON
td.3.27.header=Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
td.3.27.id=38
td.3.27.name=cache-PrepareThread
td.3.27.isBlocked=false
td.3.27.isBlocking=false
td.3.27.isDaemon=true
td.3.27.isDeadLocked=false
td.3.27.isIdle=true

#Thread-45 "[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:110)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.28.blockedObjectId=847a42
td.3.28.blockerId=28
td.3.28.condition=alive, in native, blocked, priority=5, DAEMON
td.3.28.header=Thread-45 "[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.28.id=45
td.3.28.name=[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.28.isBlocked=true
td.3.28.isBlocking=false
td.3.28.isDaemon=true
td.3.28.isDeadLocked=false
td.3.28.isIdle=false

#Thread-46 "[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.29.blockedObjectId=847a41
td.3.29.blockerId=17
td.3.29.condition=alive, in native, blocked, priority=5, DAEMON
td.3.29.header=Thread-46 "[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.29.id=46
td.3.29.name=[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.29.isBlocked=true
td.3.29.isBlocking=false
td.3.29.isDaemon=true
td.3.29.isDeadLocked=false
td.3.29.isIdle=false

#Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.30.blockedObjectId=847a42
td.3.30.blockerId=28
td.3.30.condition=alive, in native, blocked, priority=5, DAEMON
td.3.30.header=Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.30.id=47
td.3.30.name=[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.30.isBlocked=true
td.3.30.isBlocking=false
td.3.30.isDaemon=true
td.3.30.isDeadLocked=false
td.3.30.isIdle=false

#Thread-48 "[STANDBY] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
#   jrockit.vm.Threads.getThreadSnapShot0(Native Method)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.mapi.ThreadSnapshotImpl.getThreadSnapshot(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadSnapshots(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadStackDump(Unknown Source)
#   weblogic.platform.JRockitVM.threadDump(JRockitVM.java:35)
#   weblogic.common.internal.AdminProxy.execute(AdminProxy.java:203)
#   weblogic.t3.srvr.ClientRequest$1.run(ClientContext.java:711)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:363)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:147)
#   weblogic.t3.srvr.ClientRequest.run(ClientContext.java:708)
#   weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.31.blockedObjectId=null
td.3.31.blockerId=null
td.3.31.condition=alive, in native, priority=5, DAEMON
td.3.31.header=Thread-48 "[STANDBY] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
td.3.31.id=48
td.3.31.name=[STANDBY] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.31.isBlocked=false
td.3.31.isBlocking=false
td.3.31.isDaemon=true
td.3.31.isDeadLocked=false
td.3.31.isIdle=false

#Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:110)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.3.32.blockedObjectId=847a42
td.3.32.blockerId=28
td.3.32.condition=alive, in native, blocked, priority=5, DAEMON
td.3.32.header=Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.3.32.id=49
td.3.32.name=[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'
td.3.32.isBlocked=true
td.3.32.isBlocking=false
td.3.32.isDaemon=true
td.3.32.isDeadLocked=false
td.3.32.isIdle=false

ftd.4.deadLockSize=1
ftd.4.threadCount=35
#Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
#   -- Waiting for notification on: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.t3.srvr.T3Srvr.waitForDeath(T3Srvr.java:727)
#   ^-- Lock released while waiting: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:379)
#   weblogic.Server.main(Server.java:66)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.0.blockedObjectId=null
td.4.0.blockerId=null
td.4.0.condition=alive, in native, waiting, priority=5
td.4.0.header=Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
td.4.0.id=1
td.4.0.name=Main Thread
td.4.0.isBlocked=false
td.4.0.isBlocking=false
td.4.0.isDaemon=false
td.4.0.isDeadLocked=false
td.4.0.isIdle=true

#Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.4.1.blockedObjectId=null
td.4.1.blockerId=null
td.4.1.condition=alive, in native, priority=5, DAEMON
td.4.1.header=Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.4.1.id=2
td.4.1.name=(Signal Handler)
td.4.1.isBlocked=false
td.4.1.isBlocking=false
td.4.1.isDaemon=true
td.4.1.isDeadLocked=false
td.4.1.isIdle=false

#Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.4.2.blockedObjectId=null
td.4.2.blockerId=null
td.4.2.condition=alive, in native, native_waiting, priority=5, DAEMON
td.4.2.header=Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.4.2.id=3
td.4.2.name=(Code Generation Thread 1)
td.4.2.isBlocked=false
td.4.2.isBlocking=false
td.4.2.isDaemon=true
td.4.2.isDeadLocked=false
td.4.2.isIdle=false

#Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.4.3.blockedObjectId=null
td.4.3.blockerId=null
td.4.3.condition=alive, in native, native_waiting, priority=1, DAEMON
td.4.3.header=Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.4.3.id=4
td.4.3.name=(Code Optimization Thread 1)
td.4.3.isBlocked=false
td.4.3.isBlocking=false
td.4.3.isDaemon=true
td.4.3.isDeadLocked=false
td.4.3.isIdle=false

#Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.4.4.blockedObjectId=null
td.4.4.blockerId=null
td.4.4.condition=alive, in native, priority=5, DAEMON
td.4.4.header=Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.4.4.id=5
td.4.4.name=(GC Main Thread)
td.4.4.isBlocked=false
td.4.4.isBlocking=false
td.4.4.isDaemon=true
td.4.4.isDeadLocked=false
td.4.4.isIdle=false

#Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.4.5.blockedObjectId=null
td.4.5.blockerId=null
td.4.5.condition=alive, in native, native_waiting, priority=5, DAEMON
td.4.5.header=Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.4.5.id=6
td.4.5.name=(GC Worker Thread 1)
td.4.5.isBlocked=false
td.4.5.isBlocking=false
td.4.5.isDaemon=true
td.4.5.isDeadLocked=false
td.4.5.isIdle=false

#Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.4.6.blockedObjectId=null
td.4.6.blockerId=null
td.4.6.condition=alive, in native, priority=10, DAEMON
td.4.6.header=Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.4.6.id=7
td.4.6.name=(Hotspot Detector)
td.4.6.isBlocked=false
td.4.6.isBlocking=false
td.4.6.isDaemon=true
td.4.6.isDeadLocked=false
td.4.6.isIdle=false

#Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
#   jrockit.memory.Finalizer.getPendingFinalizee(Native Method)
#   jrockit.memory.Finalizer.access$100(Unknown Source)
#   jrockit.memory.Finalizer$4.run(Unknown Source)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.7.blockedObjectId=null
td.4.7.blockerId=null
td.4.7.condition=alive, in native, native_waiting, priority=8, DAEMON
td.4.7.header=Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
td.4.7.id=8
td.4.7.name=Finalizer
td.4.7.isBlocked=false
td.4.7.isBlocking=false
td.4.7.isDaemon=true
td.4.7.isDeadLocked=false
td.4.7.isIdle=false

#Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
#   java.lang.ref.Reference.getPending(Native Method)
#   java.lang.ref.Reference.access$000(Unknown Source)
#   java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.8.blockedObjectId=null
td.4.8.blockerId=null
td.4.8.condition=alive, in native, native_waiting, priority=10, DAEMON
td.4.8.header=Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
td.4.8.id=9
td.4.8.name=Reference Handler
td.4.8.isBlocked=false
td.4.8.isBlocking=false
td.4.8.isDaemon=true
td.4.8.isDeadLocked=false
td.4.8.isIdle=false

#Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@1bc88a[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:483)
#   ^-- Lock released while waiting: java.util.TaskQueue@1bc88a[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.9.blockedObjectId=null
td.4.9.blockerId=null
td.4.9.condition=alive, in native, waiting, priority=5, DAEMON
td.4.9.header=Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
td.4.9.id=12
td.4.9.name=Timer-0
td.4.9.isBlocked=false
td.4.9.isBlocking=false
td.4.9.isDaemon=true
td.4.9.isDeadLocked=false
td.4.9.isIdle=true

#Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@87830d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:509)
#   ^-- Lock released while waiting: java.util.TaskQueue@87830d[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.10.blockedObjectId=null
td.4.10.blockerId=null
td.4.10.condition=alive, in native, waiting, priority=5, DAEMON
td.4.10.header=Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
td.4.10.id=13
td.4.10.name=Timer-1
td.4.10.isBlocked=false
td.4.10.isBlocking=false
td.4.10.isDaemon=true
td.4.10.isDeadLocked=false
td.4.10.isIdle=true

#Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.11.blockedObjectId=847a42
td.4.11.blockerId=28
td.4.11.condition=alive, in native, blocked, priority=5, DAEMON
td.4.11.header=Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.11.id=14
td.4.11.name=[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.11.isBlocked=true
td.4.11.isBlocking=false
td.4.11.isDaemon=true
td.4.11.isDeadLocked=false
td.4.11.isIdle=false

#Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.time.common.internal.TimeTable.snooze(TimeTable.java:286)
#   ^-- Lock released while waiting: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   weblogic.time.common.internal.TimeEventGenerator.run(TimeEventGenerator.java:117)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.12.blockedObjectId=null
td.4.12.blockerId=null
td.4.12.condition=alive, in native, waiting, priority=9, DAEMON
td.4.12.header=Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
td.4.12.id=15
td.4.12.name=weblogic.time.TimeEventGenerator
td.4.12.isBlocked=false
td.4.12.isBlocking=false
td.4.12.isDaemon=true
td.4.12.isDeadLocked=false
td.4.12.isIdle=true

#Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.timers.internal.TimerThread$Thread.run(TimerThread.java:255)
#   ^-- Lock released while waiting: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.4.13.blockedObjectId=null
td.4.13.blockerId=null
td.4.13.condition=alive, in native, waiting, priority=9, DAEMON
td.4.13.header=Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
td.4.13.id=16
td.4.13.name=weblogic.timers.TimerThread
td.4.13.isBlocked=false
td.4.13.isBlocking=false
td.4.13.isDaemon=true
td.4.13.isDeadLocked=false
td.4.13.isIdle=true

#Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:103)
#   ^-- Holding lock: java.lang.Object@847a41[fat lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.14.blockedObjectId=847a42
td.4.14.blockerId=28
td.4.14.condition=alive, in native, blocked, priority=5, DAEMON
td.4.14.header=Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.14.id=17
td.4.14.name=[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.14.isBlocked=true
td.4.14.isBlocking=true
td.4.14.isDaemon=true
td.4.14.isDeadLocked=true
td.4.14.isIdle=false

#Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
#   jrockit.mapi.GarbageCollectorImpl.waitForEvent(Native Method)
#   jrockit.mapi.GarbageCollectorImpl.access$100(Unknown Source)
#   jrockit.mapi.GarbageCollectorImpl$GCEventThread.getNextEvent(Unknown Source)
#   jrockit.mapi.AsyncEventProvider$EventThread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.15.blockedObjectId=null
td.4.15.blockerId=null
td.4.15.condition=alive, in native, native_waiting, priority=5, DAEMON
td.4.15.header=Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
td.4.15.id=18
td.4.15.name=GC event thread
td.4.15.isBlocked=false
td.4.15.isBlocking=false
td.4.15.isDaemon=true
td.4.15.isDeadLocked=false
td.4.15.isIdle=false

#Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.16.blockedObjectId=null
td.4.16.blockerId=null
td.4.16.condition=alive, in native, priority=5, DAEMON
td.4.16.header=Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.4.16.id=19
td.4.16.name=ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'
td.4.16.isBlocked=false
td.4.16.isBlocking=false
td.4.16.isDaemon=true
td.4.16.isDeadLocked=false
td.4.16.isIdle=false

#Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.17.blockedObjectId=null
td.4.17.blockerId=null
td.4.17.condition=alive, in native, priority=5, DAEMON
td.4.17.header=Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.4.17.id=20
td.4.17.name=ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'
td.4.17.isBlocked=false
td.4.17.isBlocking=false
td.4.17.isDaemon=true
td.4.17.isDeadLocked=false
td.4.17.isIdle=false

#Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
#   -- Waiting for notification on: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   com.octetstring.vde.backend.standard.TransactionProcessor.waitChange(TransactionProcessor.java:367)
#   ^-- Lock released while waiting: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   com.octetstring.vde.backend.standard.TransactionProcessor.run(TransactionProcessor.java:212)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.18.blockedObjectId=null
td.4.18.blockerId=null
td.4.18.condition=alive, in native, waiting, priority=2, DAEMON
td.4.18.header=Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
td.4.18.id=23
td.4.18.name=VDE Transaction Processor Thread
td.4.18.isBlocked=false
td.4.18.isBlocking=false
td.4.18.isDaemon=true
td.4.18.isDeadLocked=false
td.4.18.isIdle=true

#Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.19.blockedObjectId=847a41
td.4.19.blockerId=17
td.4.19.condition=alive, in native, blocked, priority=5, DAEMON
td.4.19.header=Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.19.id=25
td.4.19.name=[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.19.isBlocked=true
td.4.19.isBlocking=false
td.4.19.isDaemon=true
td.4.19.isDeadLocked=false
td.4.19.isIdle=false

#Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@d57544[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.Thread.whPark(Unknown Source)
#   ^-- Lock released while waiting: java.lang.Object@d57544[fat lock]
#   java.util.concurrent.locks.LockSupport.park(Unknown Source)
#   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1772)
#   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
#   weblogic.utils.concurrent.JDK15ConcurrentBlockingQueue.take(JDK15ConcurrentBlockingQueue.java:89)
#   weblogic.store.internal.PersistentStoreImpl.getOutstandingWork(PersistentStoreImpl.java:520)
#   weblogic.store.internal.PersistentStoreImpl.run(PersistentStoreImpl.java:556)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.20.blockedObjectId=null
td.4.20.blockerId=null
td.4.20.condition=alive, in native, parked, priority=10, DAEMON
td.4.20.header=Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
td.4.20.id=26
td.4.20.name=weblogic.store._WLS_AdminServer
td.4.20.isBlocked=false
td.4.20.isBlocking=false
td.4.20.isDaemon=true
td.4.20.isDeadLocked=false
td.4.20.isIdle=false

#Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.21.blockedObjectId=847a42
td.4.21.blockerId=28
td.4.21.condition=alive, in native, blocked, priority=5, DAEMON
td.4.21.header=Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.21.id=27
td.4.21.name=[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.21.isBlocked=true
td.4.21.isBlocking=false
td.4.21.isDaemon=true
td.4.21.isDeadLocked=false
td.4.21.isIdle=false

#Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:112)
#   ^-- Holding lock: java.lang.Object@847a42[thin lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.22.blockedObjectId=847a41
td.4.22.blockerId=17
td.4.22.condition=alive, in native, blocked, priority=5, DAEMON
td.4.22.header=Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.22.id=28
td.4.22.name=[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.22.isBlocked=true
td.4.22.isBlocking=true
td.4.22.isDaemon=true
td.4.22.isDeadLocked=true
td.4.22.isIdle=false

#Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a546bf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.23.blockedObjectId=null
td.4.23.blockerId=null
td.4.23.condition=alive, in native, priority=9, DAEMON
td.4.23.header=Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
td.4.23.id=30
td.4.23.name=DynamicListenThread[Default[1]]
td.4.23.isBlocked=false
td.4.23.isBlocking=false
td.4.23.isDaemon=true
td.4.23.isDeadLocked=false
td.4.23.isIdle=false

#Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a33bcf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.24.blockedObjectId=null
td.4.24.blockerId=null
td.4.24.condition=alive, in native, priority=9, DAEMON
td.4.24.header=Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
td.4.24.id=31
td.4.24.name=DynamicListenThread[Default]
td.4.24.isBlocked=false
td.4.24.isBlocking=false
td.4.24.isDaemon=true
td.4.24.isDeadLocked=false
td.4.24.isIdle=false

#Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
#   -- Waiting for notification on: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
#   ^-- Lock released while waiting: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
#   workshop.util.filesystem.FSCache$FSCacheRefQueueThread.run(FSCache.java:65)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.25.blockedObjectId=null
td.4.25.blockerId=null
td.4.25.condition=alive, in native, waiting, priority=1, DAEMON
td.4.25.header=Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
td.4.25.id=34
td.4.25.name=FSCacheRefQueueThread
td.4.25.isBlocked=false
td.4.25.isBlocking=false
td.4.25.isDaemon=true
td.4.25.isDeadLocked=false
td.4.25.isIdle=true

#Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$CommitThread.run(TxIndexedFileImpl.java:591)
#   ^-- Lock released while waiting: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.4.26.blockedObjectId=null
td.4.26.blockerId=null
td.4.26.condition=alive, in native, waiting, priority=5, DAEMON
td.4.26.header=Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
td.4.26.id=37
td.4.26.name=cache-CommitThread
td.4.26.isBlocked=false
td.4.26.isBlocking=false
td.4.26.isDaemon=true
td.4.26.isDeadLocked=false
td.4.26.isIdle=true

#Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$PrepareThread.run(TxIndexedFileImpl.java:536)
#   ^-- Lock released while waiting: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.4.27.blockedObjectId=null
td.4.27.blockerId=null
td.4.27.condition=alive, in native, waiting, priority=5, DAEMON
td.4.27.header=Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
td.4.27.id=38
td.4.27.name=cache-PrepareThread
td.4.27.isBlocked=false
td.4.27.isBlocking=false
td.4.27.isDaemon=true
td.4.27.isDeadLocked=false
td.4.27.isIdle=true

#Thread-45 "[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:110)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.28.blockedObjectId=847a42
td.4.28.blockerId=28
td.4.28.condition=alive, in native, blocked, priority=5, DAEMON
td.4.28.header=Thread-45 "[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.28.id=45
td.4.28.name=[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.28.isBlocked=true
td.4.28.isBlocking=false
td.4.28.isDaemon=true
td.4.28.isDeadLocked=false
td.4.28.isIdle=false

#Thread-46 "[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.29.blockedObjectId=847a41
td.4.29.blockerId=17
td.4.29.condition=alive, in native, blocked, priority=5, DAEMON
td.4.29.header=Thread-46 "[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.29.id=46
td.4.29.name=[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.29.isBlocked=true
td.4.29.isBlocking=false
td.4.29.isDaemon=true
td.4.29.isDeadLocked=false
td.4.29.isIdle=false

#Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.30.blockedObjectId=847a42
td.4.30.blockerId=28
td.4.30.condition=alive, in native, blocked, priority=5, DAEMON
td.4.30.header=Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.30.id=47
td.4.30.name=[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.30.isBlocked=true
td.4.30.isBlocking=false
td.4.30.isDaemon=true
td.4.30.isDeadLocked=false
td.4.30.isIdle=false

#Thread-48 "[ACTIVE] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.31.blockedObjectId=847a41
td.4.31.blockerId=17
td.4.31.condition=alive, in native, blocked, priority=5, DAEMON
td.4.31.header=Thread-48 "[ACTIVE] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.31.id=48
td.4.31.name=[ACTIVE] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.31.isBlocked=true
td.4.31.isBlocking=false
td.4.31.isDaemon=true
td.4.31.isDeadLocked=false
td.4.31.isIdle=false

#Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:110)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.32.blockedObjectId=847a42
td.4.32.blockerId=28
td.4.32.condition=alive, in native, blocked, priority=5, DAEMON
td.4.32.header=Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.32.id=49
td.4.32.name=[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.32.isBlocked=true
td.4.32.isBlocking=false
td.4.32.isDaemon=true
td.4.32.isDeadLocked=false
td.4.32.isIdle=false

#Thread-50 "[STANDBY] ExecuteThread: '10' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
#   jrockit.vm.Threads.getThreadSnapShot0(Native Method)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.mapi.ThreadSnapshotImpl.getThreadSnapshot(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadSnapshots(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadStackDump(Unknown Source)
#   weblogic.platform.JRockitVM.threadDump(JRockitVM.java:35)
#   weblogic.common.internal.AdminProxy.execute(AdminProxy.java:203)
#   weblogic.t3.srvr.ClientRequest$1.run(ClientContext.java:711)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:363)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:147)
#   weblogic.t3.srvr.ClientRequest.run(ClientContext.java:708)
#   weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.33.blockedObjectId=null
td.4.33.blockerId=null
td.4.33.condition=alive, in native, priority=5, DAEMON
td.4.33.header=Thread-50 "[STANDBY] ExecuteThread: '10' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
td.4.33.id=50
td.4.33.name=[STANDBY] ExecuteThread: '10' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.33.isBlocked=false
td.4.33.isBlocking=false
td.4.33.isDaemon=true
td.4.33.isDeadLocked=false
td.4.33.isIdle=false

#Thread-51 "[ACTIVE] ExecuteThread: '11' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.4.34.blockedObjectId=847a42
td.4.34.blockerId=28
td.4.34.condition=alive, in native, blocked, priority=5, DAEMON
td.4.34.header=Thread-51 "[ACTIVE] ExecuteThread: '11' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.4.34.id=51
td.4.34.name=[ACTIVE] ExecuteThread: '11' for queue: 'weblogic.kernel.Default (self-tuning)'
td.4.34.isBlocked=true
td.4.34.isBlocking=false
td.4.34.isDaemon=true
td.4.34.isDeadLocked=false
td.4.34.isIdle=false

ftd.5.deadLockSize=1
ftd.5.threadCount=37
#Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
#   -- Waiting for notification on: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.t3.srvr.T3Srvr.waitForDeath(T3Srvr.java:727)
#   ^-- Lock released while waiting: weblogic.t3.srvr.T3Srvr@cdaaa[fat lock]
#   weblogic.t3.srvr.T3Srvr.run(T3Srvr.java:379)
#   weblogic.Server.main(Server.java:66)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.0.blockedObjectId=null
td.5.0.blockerId=null
td.5.0.condition=alive, in native, waiting, priority=5
td.5.0.header=Thread-1 "Main Thread" <alive, in native, waiting, priority=5> {
td.5.0.id=1
td.5.0.name=Main Thread
td.5.0.isBlocked=false
td.5.0.isBlocking=false
td.5.0.isDaemon=false
td.5.0.isDeadLocked=false
td.5.0.isIdle=true

#Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.5.1.blockedObjectId=null
td.5.1.blockerId=null
td.5.1.condition=alive, in native, priority=5, DAEMON
td.5.1.header=Thread-2 "(Signal Handler)" <alive, in native, priority=5, DAEMON> {
td.5.1.id=2
td.5.1.name=(Signal Handler)
td.5.1.isBlocked=false
td.5.1.isBlocking=false
td.5.1.isDaemon=true
td.5.1.isDeadLocked=false
td.5.1.isIdle=false

#Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.5.2.blockedObjectId=null
td.5.2.blockerId=null
td.5.2.condition=alive, in native, native_waiting, priority=5, DAEMON
td.5.2.header=Thread-3 "(Code Generation Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.5.2.id=3
td.5.2.name=(Code Generation Thread 1)
td.5.2.isBlocked=false
td.5.2.isBlocking=false
td.5.2.isDaemon=true
td.5.2.isDeadLocked=false
td.5.2.isIdle=false

#Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.5.3.blockedObjectId=null
td.5.3.blockerId=null
td.5.3.condition=alive, in native, native_waiting, priority=1, DAEMON
td.5.3.header=Thread-4 "(Code Optimization Thread 1)" <alive, in native, native_waiting, priority=1, DAEMON> {
td.5.3.id=4
td.5.3.name=(Code Optimization Thread 1)
td.5.3.isBlocked=false
td.5.3.isBlocking=false
td.5.3.isDaemon=true
td.5.3.isDeadLocked=false
td.5.3.isIdle=false

#Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.5.4.blockedObjectId=null
td.5.4.blockerId=null
td.5.4.condition=alive, in native, priority=5, DAEMON
td.5.4.header=Thread-5 "(GC Main Thread)" <alive, in native, priority=5, DAEMON> {
td.5.4.id=5
td.5.4.name=(GC Main Thread)
td.5.4.isBlocked=false
td.5.4.isBlocking=false
td.5.4.isDaemon=true
td.5.4.isDeadLocked=false
td.5.4.isIdle=false

#Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.5.5.blockedObjectId=null
td.5.5.blockerId=null
td.5.5.condition=alive, in native, native_waiting, priority=5, DAEMON
td.5.5.header=Thread-6 "(GC Worker Thread 1)" <alive, in native, native_waiting, priority=5, DAEMON> {
td.5.5.id=6
td.5.5.name=(GC Worker Thread 1)
td.5.5.isBlocked=false
td.5.5.isBlocking=false
td.5.5.isDaemon=true
td.5.5.isDeadLocked=false
td.5.5.isIdle=false

#Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.5.6.blockedObjectId=null
td.5.6.blockerId=null
td.5.6.condition=alive, in native, priority=10, DAEMON
td.5.6.header=Thread-7 "(Hotspot Detector)" <alive, in native, priority=10, DAEMON> {
td.5.6.id=7
td.5.6.name=(Hotspot Detector)
td.5.6.isBlocked=false
td.5.6.isBlocking=false
td.5.6.isDaemon=true
td.5.6.isDeadLocked=false
td.5.6.isIdle=false

#Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
#   jrockit.memory.Finalizer.getPendingFinalizee(Native Method)
#   jrockit.memory.Finalizer.access$100(Unknown Source)
#   jrockit.memory.Finalizer$4.run(Unknown Source)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.7.blockedObjectId=null
td.5.7.blockerId=null
td.5.7.condition=alive, in native, native_waiting, priority=8, DAEMON
td.5.7.header=Thread-8 "Finalizer" <alive, in native, native_waiting, priority=8, DAEMON> {
td.5.7.id=8
td.5.7.name=Finalizer
td.5.7.isBlocked=false
td.5.7.isBlocking=false
td.5.7.isDaemon=true
td.5.7.isDeadLocked=false
td.5.7.isIdle=false

#Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
#   java.lang.ref.Reference.getPending(Native Method)
#   java.lang.ref.Reference.access$000(Unknown Source)
#   java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.8.blockedObjectId=null
td.5.8.blockerId=null
td.5.8.condition=alive, in native, native_waiting, priority=10, DAEMON
td.5.8.header=Thread-9 "Reference Handler" <alive, in native, native_waiting, priority=10, DAEMON> {
td.5.8.id=9
td.5.8.name=Reference Handler
td.5.8.isBlocked=false
td.5.8.isBlocking=false
td.5.8.isDaemon=true
td.5.8.isDeadLocked=false
td.5.8.isIdle=false

#Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@1bc88a[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:483)
#   ^-- Lock released while waiting: java.util.TaskQueue@1bc88a[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.9.blockedObjectId=null
td.5.9.blockerId=null
td.5.9.condition=alive, in native, waiting, priority=5, DAEMON
td.5.9.header=Thread-12 "Timer-0" <alive, in native, waiting, priority=5, DAEMON> {
td.5.9.id=12
td.5.9.name=Timer-0
td.5.9.isBlocked=false
td.5.9.isBlocking=false
td.5.9.isDaemon=true
td.5.9.isDeadLocked=false
td.5.9.isIdle=true

#Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.util.TaskQueue@87830d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.util.TimerThread.mainLoop(Timer.java:509)
#   ^-- Lock released while waiting: java.util.TaskQueue@87830d[fat lock]
#   java.util.TimerThread.run(Timer.java:462)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.10.blockedObjectId=null
td.5.10.blockerId=null
td.5.10.condition=alive, in native, waiting, priority=5, DAEMON
td.5.10.header=Thread-13 "Timer-1" <alive, in native, waiting, priority=5, DAEMON> {
td.5.10.id=13
td.5.10.name=Timer-1
td.5.10.isBlocked=false
td.5.10.isBlocking=false
td.5.10.isDaemon=true
td.5.10.isDeadLocked=false
td.5.10.isIdle=true

#Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.11.blockedObjectId=847a42
td.5.11.blockerId=28
td.5.11.condition=alive, in native, blocked, priority=5, DAEMON
td.5.11.header=Thread-14 "[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.11.id=14
td.5.11.name=[ACTIVE] ExecuteThread: '0' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.11.isBlocked=true
td.5.11.isBlocking=false
td.5.11.isDaemon=true
td.5.11.isDeadLocked=false
td.5.11.isIdle=false

#Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.time.common.internal.TimeTable.snooze(TimeTable.java:286)
#   ^-- Lock released while waiting: weblogic.time.common.internal.TimeTable@8a1d20[fat lock]
#   weblogic.time.common.internal.TimeEventGenerator.run(TimeEventGenerator.java:117)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.12.blockedObjectId=null
td.5.12.blockerId=null
td.5.12.condition=alive, in native, waiting, priority=9, DAEMON
td.5.12.header=Thread-15 "weblogic.time.TimeEventGenerator" <alive, in native, waiting, priority=9, DAEMON> {
td.5.12.id=15
td.5.12.name=weblogic.time.TimeEventGenerator
td.5.12.isBlocked=false
td.5.12.isBlocking=false
td.5.12.isDaemon=true
td.5.12.isDeadLocked=false
td.5.12.isIdle=true

#Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
#   -- Waiting for notification on: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.timers.internal.TimerThread$Thread.run(TimerThread.java:255)
#   ^-- Lock released while waiting: weblogic.timers.internal.TimerThread@8a3e4d[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.5.13.blockedObjectId=null
td.5.13.blockerId=null
td.5.13.condition=alive, in native, waiting, priority=9, DAEMON
td.5.13.header=Thread-16 "weblogic.timers.TimerThread" <alive, in native, waiting, priority=9, DAEMON> {
td.5.13.id=16
td.5.13.name=weblogic.timers.TimerThread
td.5.13.isBlocked=false
td.5.13.isBlocking=false
td.5.13.isDaemon=true
td.5.13.isDeadLocked=false
td.5.13.isIdle=true

#Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:103)
#   ^-- Holding lock: java.lang.Object@847a41[fat lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.14.blockedObjectId=847a42
td.5.14.blockerId=28
td.5.14.condition=alive, in native, blocked, priority=5, DAEMON
td.5.14.header=Thread-17 "[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.14.id=17
td.5.14.name=[ACTIVE] ExecuteThread: '1' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.14.isBlocked=true
td.5.14.isBlocking=true
td.5.14.isDaemon=true
td.5.14.isDeadLocked=true
td.5.14.isIdle=false

#Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
#   jrockit.mapi.GarbageCollectorImpl.waitForEvent(Native Method)
#   jrockit.mapi.GarbageCollectorImpl.access$100(Unknown Source)
#   jrockit.mapi.GarbageCollectorImpl$GCEventThread.getNextEvent(Unknown Source)
#   jrockit.mapi.AsyncEventProvider$EventThread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.15.blockedObjectId=null
td.5.15.blockerId=null
td.5.15.condition=alive, in native, native_waiting, priority=5, DAEMON
td.5.15.header=Thread-18 "GC event thread" <alive, in native, native_waiting, priority=5, DAEMON> {
td.5.15.id=18
td.5.15.name=GC event thread
td.5.15.isBlocked=false
td.5.15.isBlocking=false
td.5.15.isDaemon=true
td.5.15.isDeadLocked=false
td.5.15.isIdle=false

#Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.16.blockedObjectId=null
td.5.16.blockerId=null
td.5.16.condition=alive, in native, priority=5, DAEMON
td.5.16.header=Thread-19 "ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.5.16.id=19
td.5.16.name=ExecuteThread: '0' for queue: 'weblogic.socket.Muxer'
td.5.16.isBlocked=false
td.5.16.isBlocking=false
td.5.16.isDaemon=true
td.5.16.isDeadLocked=false
td.5.16.isIdle=false

#Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
#   weblogic.socket.NTSocketMuxer.getIoCompletionResult(Native Method)
#   weblogic.socket.NTSocketMuxer.processSockets(NTSocketMuxer.java:81)
#   weblogic.socket.SocketReaderRequest.run(SocketReaderRequest.java:29)
#   weblogic.socket.SocketReaderRequest.execute(SocketReaderRequest.java:42)
#   weblogic.kernel.ExecuteThread.execute(ExecuteThread.java:145)
#   weblogic.kernel.ExecuteThread.run(ExecuteThread.java:117)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.17.blockedObjectId=null
td.5.17.blockerId=null
td.5.17.condition=alive, in native, priority=5, DAEMON
td.5.17.header=Thread-20 "ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'" <alive, in native, priority=5, DAEMON> {
td.5.17.id=20
td.5.17.name=ExecuteThread: '1' for queue: 'weblogic.socket.Muxer'
td.5.17.isBlocked=false
td.5.17.isBlocking=false
td.5.17.isDaemon=true
td.5.17.isDeadLocked=false
td.5.17.isIdle=false

#Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
#   -- Waiting for notification on: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   com.octetstring.vde.backend.standard.TransactionProcessor.waitChange(TransactionProcessor.java:367)
#   ^-- Lock released while waiting: com.octetstring.vde.backend.standard.TransactionProcessor@aba202[fat lock]
#   com.octetstring.vde.backend.standard.TransactionProcessor.run(TransactionProcessor.java:212)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.18.blockedObjectId=null
td.5.18.blockerId=null
td.5.18.condition=alive, in native, waiting, priority=2, DAEMON
td.5.18.header=Thread-23 "VDE Transaction Processor Thread" <alive, in native, waiting, priority=2, DAEMON> {
td.5.18.id=23
td.5.18.name=VDE Transaction Processor Thread
td.5.18.isBlocked=false
td.5.18.isBlocking=false
td.5.18.isDaemon=true
td.5.18.isDeadLocked=false
td.5.18.isIdle=true

#Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.19.blockedObjectId=847a41
td.5.19.blockerId=17
td.5.19.condition=alive, in native, blocked, priority=5, DAEMON
td.5.19.header=Thread-25 "[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.19.id=25
td.5.19.name=[ACTIVE] ExecuteThread: '2' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.19.isBlocked=true
td.5.19.isBlocking=false
td.5.19.isDaemon=true
td.5.19.isDeadLocked=false
td.5.19.isIdle=false

#Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@d57544[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.Thread.whPark(Unknown Source)
#   ^-- Lock released while waiting: java.lang.Object@d57544[fat lock]
#   java.util.concurrent.locks.LockSupport.park(Unknown Source)
#   java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1772)
#   java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:359)
#   weblogic.utils.concurrent.JDK15ConcurrentBlockingQueue.take(JDK15ConcurrentBlockingQueue.java:89)
#   weblogic.store.internal.PersistentStoreImpl.getOutstandingWork(PersistentStoreImpl.java:520)
#   weblogic.store.internal.PersistentStoreImpl.run(PersistentStoreImpl.java:556)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.20.blockedObjectId=null
td.5.20.blockerId=null
td.5.20.condition=alive, in native, parked, priority=10, DAEMON
td.5.20.header=Thread-26 "weblogic.store._WLS_AdminServer" <alive, in native, parked, priority=10, DAEMON> {
td.5.20.id=26
td.5.20.name=weblogic.store._WLS_AdminServer
td.5.20.isBlocked=false
td.5.20.isBlocking=false
td.5.20.isDaemon=true
td.5.20.isDeadLocked=false
td.5.20.isIdle=false

#Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.21.blockedObjectId=847a42
td.5.21.blockerId=28
td.5.21.condition=alive, in native, blocked, priority=5, DAEMON
td.5.21.header=Thread-27 "[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.21.id=27
td.5.21.name=[ACTIVE] ExecuteThread: '3' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.21.isBlocked=true
td.5.21.isBlocking=false
td.5.21.isDaemon=true
td.5.21.isDeadLocked=false
td.5.21.isIdle=false

#Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:112)
#   ^-- Holding lock: java.lang.Object@847a42[thin lock]
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.22.blockedObjectId=847a41
td.5.22.blockerId=17
td.5.22.condition=alive, in native, blocked, priority=5, DAEMON
td.5.22.header=Thread-28 "[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.22.id=28
td.5.22.name=[ACTIVE] ExecuteThread: '4' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.22.isBlocked=true
td.5.22.isBlocking=true
td.5.22.isDaemon=true
td.5.22.isDeadLocked=true
td.5.22.isIdle=false

#Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a546bf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.23.blockedObjectId=null
td.5.23.blockerId=null
td.5.23.condition=alive, in native, priority=9, DAEMON
td.5.23.header=Thread-30 "DynamicListenThread[Default[1]]" <alive, in native, priority=9, DAEMON> {
td.5.23.id=30
td.5.23.name=DynamicListenThread[Default[1]]
td.5.23.isBlocked=false
td.5.23.isBlocking=false
td.5.23.isDaemon=true
td.5.23.isDeadLocked=false
td.5.23.isIdle=false

#Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
#   jrockit.net.SocketNativeIO.accept(Native Method)
#   jrockit.net.SocketNativeIO.accept(Unknown Source)
#   java.net.AbstractSocketImpl.accept(Unknown Source)
#   ^-- Holding lock: java.net.SocksSocketImpl@1a33bcf[thin lock]
#   java.net.ServerSocket.implAccept(ServerSocket.java:450)
#   java.net.ServerSocket.accept(ServerSocket.java:421)
#   weblogic.socket.WeblogicServerSocket.accept(WeblogicServerSocket.java:34)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.accept(DynamicListenThread.java:517)
#   weblogic.server.channels.DynamicListenThread$SocketAccepter.access$200(DynamicListenThread.java:418)
#   weblogic.server.channels.DynamicListenThread.run(DynamicListenThread.java:164)
#   java.lang.Thread.run(Unknown Source)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.24.blockedObjectId=null
td.5.24.blockerId=null
td.5.24.condition=alive, in native, priority=9, DAEMON
td.5.24.header=Thread-31 "DynamicListenThread[Default]" <alive, in native, priority=9, DAEMON> {
td.5.24.id=31
td.5.24.name=DynamicListenThread[Default]
td.5.24.isBlocked=false
td.5.24.isBlocking=false
td.5.24.isDaemon=true
td.5.24.isDeadLocked=false
td.5.24.isIdle=false

#Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
#   -- Waiting for notification on: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   jrockit.vm.Locks.wait(Unknown Source)
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
#   ^-- Lock released while waiting: java.lang.ref.ReferenceQueue$Lock@6b4012[fat lock]
#   java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
#   workshop.util.filesystem.FSCache$FSCacheRefQueueThread.run(FSCache.java:65)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.25.blockedObjectId=null
td.5.25.blockerId=null
td.5.25.condition=alive, in native, waiting, priority=1, DAEMON
td.5.25.header=Thread-34 "FSCacheRefQueueThread" <alive, in native, waiting, priority=1, DAEMON> {
td.5.25.id=34
td.5.25.name=FSCacheRefQueueThread
td.5.25.isBlocked=false
td.5.25.isBlocking=false
td.5.25.isDaemon=true
td.5.25.isDeadLocked=false
td.5.25.isIdle=true

#Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$CommitThread.run(TxIndexedFileImpl.java:591)
#   ^-- Lock released while waiting: java.lang.Object@c10f4a[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.5.26.blockedObjectId=null
td.5.26.blockerId=null
td.5.26.condition=alive, in native, waiting, priority=5, DAEMON
td.5.26.header=Thread-37 "cache-CommitThread" <alive, in native, waiting, priority=5, DAEMON> {
td.5.26.id=37
td.5.26.name=cache-CommitThread
td.5.26.isBlocked=false
td.5.26.isBlocking=false
td.5.26.isDaemon=true
td.5.26.isDeadLocked=false
td.5.26.isIdle=true

#Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.Threads.waitForSignalWithTimeout(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.persist.TxIndexedFileImpl$PrepareThread.run(TxIndexedFileImpl.java:536)
#   ^-- Lock released while waiting: java.lang.Object@c10f5b[fat lock]
#   jrockit.vm.RNI.c2java(Native Method)
td.5.27.blockedObjectId=null
td.5.27.blockerId=null
td.5.27.condition=alive, in native, waiting, priority=5, DAEMON
td.5.27.header=Thread-38 "cache-PrepareThread" <alive, in native, waiting, priority=5, DAEMON> {
td.5.27.id=38
td.5.27.name=cache-PrepareThread
td.5.27.isBlocked=false
td.5.27.isBlocking=false
td.5.27.isDaemon=true
td.5.27.isDeadLocked=false
td.5.27.isIdle=true

#Thread-45 "[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:110)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.28.blockedObjectId=847a42
td.5.28.blockerId=28
td.5.28.condition=alive, in native, blocked, priority=5, DAEMON
td.5.28.header=Thread-45 "[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.28.id=45
td.5.28.name=[ACTIVE] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.28.isBlocked=true
td.5.28.isBlocking=false
td.5.28.isDaemon=true
td.5.28.isDeadLocked=false
td.5.28.isIdle=false

#Thread-46 "[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.29.blockedObjectId=847a41
td.5.29.blockerId=17
td.5.29.condition=alive, in native, blocked, priority=5, DAEMON
td.5.29.header=Thread-46 "[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.29.id=46
td.5.29.name=[ACTIVE] ExecuteThread: '6' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.29.isBlocked=true
td.5.29.isBlocking=false
td.5.29.isDaemon=true
td.5.29.isDeadLocked=false
td.5.29.isIdle=false

#Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.30.blockedObjectId=847a42
td.5.30.blockerId=28
td.5.30.condition=alive, in native, blocked, priority=5, DAEMON
td.5.30.header=Thread-47 "[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.30.id=47
td.5.30.name=[ACTIVE] ExecuteThread: '7' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.30.isBlocked=true
td.5.30.isBlocking=false
td.5.30.isDaemon=true
td.5.30.isDeadLocked=false
td.5.30.isIdle=false

#Thread-48 "[ACTIVE] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a41[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.fatLockBlockOrSpin(Unknown Source)
#   jrockit.vm.Locks.lockFat(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:101)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.31.blockedObjectId=847a41
td.5.31.blockerId=17
td.5.31.condition=alive, in native, blocked, priority=5, DAEMON
td.5.31.header=Thread-48 "[ACTIVE] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.31.id=48
td.5.31.name=[ACTIVE] ExecuteThread: '8' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.31.isBlocked=true
td.5.31.isBlocking=false
td.5.31.isDaemon=true
td.5.31.isDeadLocked=false
td.5.31.isIdle=false

#Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:110)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.32.blockedObjectId=847a42
td.5.32.blockerId=28
td.5.32.condition=alive, in native, blocked, priority=5, DAEMON
td.5.32.header=Thread-49 "[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.32.id=49
td.5.32.name=[ACTIVE] ExecuteThread: '9' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.32.isBlocked=true
td.5.32.isBlocking=false
td.5.32.isDaemon=true
td.5.32.isDeadLocked=false
td.5.32.isIdle=false

#Thread-50 "[STANDBY] ExecuteThread: '10' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@fffffffff95ba9b9[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@fffffffff95ba9b9[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.33.blockedObjectId=null
td.5.33.blockerId=null
td.5.33.condition=alive, in native, waiting, priority=5, DAEMON
td.5.33.header=Thread-50 "[STANDBY] ExecuteThread: '10' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.5.33.id=50
td.5.33.name=[STANDBY] ExecuteThread: '10' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.33.isBlocked=false
td.5.33.isBlocking=false
td.5.33.isDaemon=true
td.5.33.isDeadLocked=false
td.5.33.isIdle=true

#Thread-51 "[ACTIVE] ExecuteThread: '11' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
#   -- Blocked trying to get lock: java.lang.Object@847a42[thin lock]
#   jrockit.vm.Threads.shortNap(Native Method)
#   jrockit.vm.Locks.waitForThinRelease(Unknown Source)
#   jrockit.vm.Locks.monitorEnterSecondStage(Unknown Source)
#   jrockit.vm.Locks.monitorEnter(Unknown Source)
#   jsp_servlet.__index._jspService(__index.java:119)
#   weblogic.servlet.jsp.JspBase.service(JspBase.java:34)
#   weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:214)
#   weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:120)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:272)
#   weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:165)
#   weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3022)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
#   weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1925)
#   weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1848)
#   weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1288)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.34.blockedObjectId=847a42
td.5.34.blockerId=28
td.5.34.condition=alive, in native, blocked, priority=5, DAEMON
td.5.34.header=Thread-51 "[ACTIVE] ExecuteThread: '11' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, blocked, priority=5, DAEMON> {
td.5.34.id=51
td.5.34.name=[ACTIVE] ExecuteThread: '11' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.34.isBlocked=true
td.5.34.isBlocking=false
td.5.34.isDaemon=true
td.5.34.isDeadLocked=false
td.5.34.isIdle=false

#Thread-52 "[STANDBY] ExecuteThread: '12' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
#   -- Waiting for notification on: weblogic.work.ExecuteThread@13d10cbb[fat lock]
#   jrockit.vm.Threads.waitForSignal(Native Method)
#   jrockit.vm.Locks.wait(Unknown Source)
#   weblogic.work.ExecuteThread.waitForRequest(ExecuteThread.java:163)
#   ^-- Lock released while waiting: weblogic.work.ExecuteThread@13d10cbb[fat lock]
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:184)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.35.blockedObjectId=null
td.5.35.blockerId=null
td.5.35.condition=alive, in native, waiting, priority=5, DAEMON
td.5.35.header=Thread-52 "[STANDBY] ExecuteThread: '12' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, waiting, priority=5, DAEMON> {
td.5.35.id=52
td.5.35.name=[STANDBY] ExecuteThread: '12' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.35.isBlocked=false
td.5.35.isBlocking=false
td.5.35.isDaemon=true
td.5.35.isDeadLocked=false
td.5.35.isIdle=true

#Thread-53 "[ACTIVE] ExecuteThread: '13' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
#   jrockit.vm.Threads.getThreadSnapShot0(Native Method)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.vm.Threads.dumpThreads(Unknown Source)
#   jrockit.mapi.ThreadSnapshotImpl.getThreadSnapshot(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadSnapshots(Unknown Source)
#   jrockit.mapi.ThreadSystemImpl.getThreadStackDump(Unknown Source)
#   weblogic.platform.JRockitVM.threadDump(JRockitVM.java:35)
#   weblogic.common.internal.AdminProxy.execute(AdminProxy.java:203)
#   weblogic.t3.srvr.ClientRequest$1.run(ClientContext.java:711)
#   weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:363)
#   weblogic.security.service.SecurityManager.runAs(SecurityManager.java:147)
#   weblogic.t3.srvr.ClientRequest.run(ClientContext.java:708)
#   weblogic.work.ServerWorkManagerImpl$WorkAdapterImpl.run(ServerWorkManagerImpl.java:518)
#   weblogic.work.ExecuteThread.execute(ExecuteThread.java:207)
#   weblogic.work.ExecuteThread.run(ExecuteThread.java:179)
#   jrockit.vm.RNI.c2java(Native Method)
td.5.36.blockedObjectId=null
td.5.36.blockerId=null
td.5.36.condition=alive, in native, priority=5, DAEMON
td.5.36.header=Thread-53 "[ACTIVE] ExecuteThread: '13' for queue: 'weblogic.kernel.Default (self-tuning)'" <alive, in native, priority=5, DAEMON> {
td.5.36.id=53
td.5.36.name=[ACTIVE] ExecuteThread: '13' for queue: 'weblogic.kernel.Default (self-tuning)'
td.5.36.isBlocked=false
td.5.36.isBlocking=false
td.5.36.isDaemon=true
td.5.36.isDeadLocked=false
td.5.36.isIdle=false

